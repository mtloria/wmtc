{"version":3,"file":"component---src-pages-404-js-966651d64f597fb9eb44.js","mappings":"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","sources":["webpack://wmtc/./node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","webpack://wmtc/./node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","webpack://wmtc/./node_modules/@mui/material/GlobalStyles/GlobalStyles.js","webpack://wmtc/./node_modules/@mui/material/zero-styled/index.js","webpack://wmtc/./src/pages/404.js","webpack://wmtc/./node_modules/@mui/material/Typography/Typography.js","webpack://wmtc/./node_modules/@mui/material/Typography/typographyClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles } from '@mui/styled-engine';\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const globalStyles = typeof styles === 'function' ? styles(themeId ? upperTheme[themeId] || upperTheme : upperTheme) : styles;\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { Box, Typography } from '@mui/material';\nimport { StaticImage } from 'gatsby-plugin-image';\n\nconst NotFoundPage = () => {\n  return (\n    <Box sx={{ padding: 4, textAlign: 'center' }}>\n      <Typography variant=\"h1\" gutterBottom sx={{ fontWeight: 'bold', color: '#202a44' }}>\n        Page Not Found\n      </Typography>\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: 2 }}>\n        <StaticImage src='../images/WMTC_Logo.png' alt=\"WMTC Logo\" style={{ width: '100%', maxWidth: 200, margin: '0 auto', objectFit: 'cover', height: 'auto' }} />\n      </Box>\n      <Typography variant=\"body1\" sx={{ marginTop: 4 }}>\n        Sorry, we couldn’t find what you were looking for.\n      </Typography>\n      <Typography variant=\"body1\" sx={{ marginTop: 2 }}>\n        <Link to=\"/\" style={{ color: '#1e88e5', textDecoration: 'none', fontWeight: 'bold' }}>Go back to the homepage</Link>.\n      </Typography>\n    </Box>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const Head = () => <title>Page Not Found</title>;\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;"],"names":["GlobalStyles","props","styles","defaultTheme","globalStyles","themeInput","obj","Object","keys","length","themeId","upperTheme","useTheme","globalCss","theme","internal_createExtendSxProp","extendSxProp","NotFoundPage","React","Box","sx","padding","textAlign","Typography","variant","gutterBottom","fontWeight","color","display","justifyContent","marginTop","StaticImage","src","alt","style","width","maxWidth","margin","objectFit","height","__imageData","require","Link","to","textDecoration","Head","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","TypographyRoot","name","slot","overridesResolver","ownerState","root","align","noWrap","paragraph","variants","font","lineHeight","letterSpacing","entries","typography","filter","value","map","palette","vars","main","text","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","inProps","ref","themeProps","className","component","variantMapping","other","Component","classes","slots","useUtilityClasses","as","getTypographyUtilityClass","typographyClasses"],"sourceRoot":""}