{"version":3,"file":"ef44054a4e016d2641f26e642cd1a3ab064f9eea-55fce706feb5211b153e.js","mappings":"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","sources":["webpack://wmtc/../src/image-utils.ts","webpack://wmtc/../src/components/hooks.ts","webpack://wmtc/../src/components/layout-wrapper.tsx","webpack://wmtc/../src/components/picture.tsx","webpack://wmtc/../src/components/placeholder.tsx","webpack://wmtc/../src/components/main-image.tsx","webpack://wmtc/../src/components/gatsby-image.server.tsx","webpack://wmtc/../src/components/gatsby-image.browser.tsx","webpack://wmtc/../src/components/static-image.server.tsx","webpack://wmtc/../src/components/static-image.tsx","webpack://wmtc/./node_modules/camelcase/index.js","webpack://wmtc/./node_modules/@mui/system/esm/RtlProvider/index.js","webpack://wmtc/./node_modules/@mui/material/CssBaseline/CssBaseline.js","webpack://wmtc/./src/theme.js","webpack://wmtc/./node_modules/@mui/private-theming/useTheme/ThemeContext.js","webpack://wmtc/./node_modules/@mui/private-theming/useTheme/useTheme.js","webpack://wmtc/./node_modules/@mui/private-theming/ThemeProvider/nested.js","webpack://wmtc/./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","webpack://wmtc/./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","webpack://wmtc/./node_modules/@mui/material/styles/ThemeProviderNoVars.js","webpack://wmtc/./node_modules/@mui/system/esm/InitColorSchemeScript/InitColorSchemeScript.js","webpack://wmtc/./node_modules/@mui/system/esm/cssVars/localStorageManager.js","webpack://wmtc/./node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js","webpack://wmtc/./node_modules/@mui/material/InitColorSchemeScript/InitColorSchemeScript.js","webpack://wmtc/./node_modules/@mui/material/styles/ThemeProviderWithVars.js","webpack://wmtc/./node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js","webpack://wmtc/./node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RtlContext = /*#__PURE__*/React.createContext();\nfunction RtlProvider({\n  value,\n  ...props\n}) {\n  return /*#__PURE__*/_jsx(RtlContext.Provider, {\n    value: value ?? true,\n    ...props\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RtlProvider.propTypes = {\n  children: PropTypes.node,\n  value: PropTypes.bool\n} : void 0;\nexport const useRtl = () => {\n  const value = React.useContext(RtlContext);\n  return value ?? false;\n};\nexport default RtlProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { globalCss } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\n\n// to determine if the global styles are static or dynamic\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst isDynamicSupport = typeof globalCss({}) === 'function';\nexport const html = (theme, enableColorScheme) => ({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%',\n  // When used under CssVarsProvider, colorScheme should not be applied dynamically because it will generate the stylesheet twice for server-rendered applications.\n  ...(enableColorScheme && !theme.vars && {\n    colorScheme: theme.palette.mode\n  })\n});\nexport const body = theme => ({\n  color: (theme.vars || theme).palette.text.primary,\n  ...theme.typography.body1,\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes && typeof theme.getColorSchemeSelector === 'function') {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      const selector = theme.getColorSchemeSelector(key);\n      if (selector.startsWith('@')) {\n        // for @media (prefers-color-scheme), we need to target :root\n        colorSchemeStyles[selector] = {\n          ':root': {\n            colorScheme: scheme.palette?.mode\n          }\n        };\n      } else {\n        // else, it's likely that the selector already target an element with a class or data attribute\n        colorSchemeStyles[selector.replace(/\\s*&/, '')] = {\n          colorScheme: scheme.palette?.mode\n        };\n      }\n    });\n  }\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: {\n      margin: 0,\n      // Remove the margin in all browsers.\n      ...body(theme),\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    },\n    ...colorSchemeStyles\n  };\n  const themeOverrides = theme.components?.MuiCssBaseline?.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n// `ecs` stands for enableColorScheme. This is internal logic to make it work with Pigment CSS, so shorter is better.\nconst SELECTOR = 'mui-ecs';\nconst staticStyles = theme => {\n  const result = styles(theme, false);\n  const baseStyles = Array.isArray(result) ? result[0] : result;\n  if (!theme.vars && baseStyles) {\n    baseStyles.html[`:root:has(${SELECTOR})`] = {\n      colorScheme: theme.palette.mode\n    };\n  }\n  if (theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      const selector = theme.getColorSchemeSelector(key);\n      if (selector.startsWith('@')) {\n        // for @media (prefers-color-scheme), we need to target :root\n        baseStyles[selector] = {\n          [`:root:not(:has(.${SELECTOR}))`]: {\n            colorScheme: scheme.palette?.mode\n          }\n        };\n      } else {\n        // else, it's likely that the selector already target an element with a class or data attribute\n        baseStyles[selector.replace(/\\s*&/, '')] = {\n          [`&:not(:has(.${SELECTOR}))`]: {\n            colorScheme: scheme.palette?.mode\n          }\n        };\n      }\n    });\n  }\n  return result;\n};\nconst GlobalStyles = globalCss(isDynamicSupport ? ({\n  theme,\n  enableColorScheme\n}) => styles(theme, enableColorScheme) : ({\n  theme\n}) => staticStyles(theme));\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [isDynamicSupport && /*#__PURE__*/_jsx(GlobalStyles, {\n      enableColorScheme: enableColorScheme\n    }), !isDynamicSupport && !enableColorScheme && /*#__PURE__*/_jsx(\"span\", {\n      className: SELECTOR,\n      style: {\n        display: 'none'\n      }\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#202a44',\n    },\n    secondary: {\n      main: '#1e88e5',\n    },\n    background: {\n      default: '#f7f8fa',\n      paper: '#fff',\n    },\n    text: {\n      primary: '#202a44',\n      secondary: '#4a4a4a',\n    },\n  },\n  typography: {\n    fontFamily: 'Inter, Roboto, Arial, sans-serif',\n    h1: {\n      fontSize: '2.8rem',\n      fontWeight: 800,\n      color: '#202a44',\n      letterSpacing: '-0.02em',\n      marginBottom: '1.2rem',\n    },\n    h2: {\n      fontSize: '2.2rem',\n      fontWeight: 700,\n      color: '#202a44',\n      letterSpacing: '-0.01em',\n      marginBottom: '1rem',\n    },\n    h3: {\n      fontSize: '1.6rem',\n      fontWeight: 600,\n      color: '#202a44',\n      marginBottom: '0.8rem',\n    },\n    h4: {\n      fontSize: '1.2rem',\n      fontWeight: 600,\n      color: '#202a44',\n      marginBottom: '0.7rem',\n    },\n    body1: {\n      fontSize: '1.05rem',\n      color: '#4a4a4a',\n      lineHeight: 1.7,\n    },\n    body2: {\n      fontSize: '0.98rem',\n      color: '#4a4a4a',\n    },\n  },\n  components: {\n    MuiContainer: {\n      defaultProps: {\n        maxWidth: 'xl', // allow wider containers\n      },\n      styleOverrides: {\n        root: {\n          maxWidth: '1600px', // increase max width for results table\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          paddingLeft: '16px',\n          paddingRight: '16px',\n          width: '100%',\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          borderRadius: 16,\n          boxShadow: '0 2px 12px rgba(32,42,68,0.07)',\n        },\n      },\n    },\n    MuiDivider: {\n      styleOverrides: {\n        root: {\n          margin: '2.5rem 0',\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","'use client';\n\nimport * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from \"./ThemeContext.js\";\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- It's not required to run React.useDebugValue in production\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from \"../useTheme/ThemeContext.js\";\nimport useTheme from \"../useTheme/index.js\";\nimport nested from \"./nested.js\";\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? {\n      ...localTheme\n    } : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from \"../useThemeWithoutDefault/index.js\";\nimport RtlProvider from \"../RtlProvider/index.js\";\nimport DefaultPropsProvider from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? {\n        ...upperTheme,\n        [themeId]: mergedTheme\n      } : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? {\n      ...upperTheme,\n      [themeId]: localTheme\n    } : {\n      ...upperTheme,\n      ...localTheme\n    };\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = (themeId ? engineTheme[themeId] : engineTheme).direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\n          value: themeId ? engineTheme[themeId].components : engineTheme.components,\n          children: children\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProviderNoVars({\n  theme: themeInput,\n  ...props\n}) {\n  const scopedTheme = THEME_ID in themeInput ? themeInput[THEME_ID] : undefined;\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}","/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultMode = 'system',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^\\]]+)\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","function noop() {}\nconst localStorageManager = ({\n  key,\n  storageWindow\n}) => {\n  if (!storageWindow && typeof window !== 'undefined') {\n    storageWindow = window;\n  }\n  return {\n    get(defaultValue) {\n      if (typeof window === 'undefined') {\n        return undefined;\n      }\n      if (!storageWindow) {\n        return defaultValue;\n      }\n      let value;\n      try {\n        value = storageWindow.localStorage.getItem(key);\n      } catch {\n        // Unsupported\n      }\n      return value || defaultValue;\n    },\n    set: value => {\n      if (storageWindow) {\n        try {\n          storageWindow.localStorage.setItem(key, value);\n        } catch {\n          // Unsupported\n        }\n      }\n    },\n    subscribe: handler => {\n      if (!storageWindow) {\n        return noop;\n      }\n      const listener = event => {\n        const value = event.newValue;\n        if (event.key === key) {\n          handler(value);\n        }\n      };\n      storageWindow.addEventListener('storage', listener);\n      return () => {\n        storageWindow.removeEventListener('storage', listener);\n      };\n    }\n  };\n};\nexport default localStorageManager;","'use client';\n\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport localStorageManager from \"./localStorageManager.js\";\nfunction noop() {}\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && typeof window.matchMedia === 'function' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    storageManager = localStorageManager,\n    noSsr = false\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const isMultiSchemes = supportedColorSchemes.length > 1;\n  const modeStorage = React.useMemo(() => storageManager?.({\n    key: modeStorageKey,\n    storageWindow\n  }), [storageManager, modeStorageKey, storageWindow]);\n  const lightStorage = React.useMemo(() => storageManager?.({\n    key: `${colorSchemeStorageKey}-light`,\n    storageWindow\n  }), [storageManager, colorSchemeStorageKey, storageWindow]);\n  const darkStorage = React.useMemo(() => storageManager?.({\n    key: `${colorSchemeStorageKey}-dark`,\n    storageWindow\n  }), [storageManager, colorSchemeStorageKey, storageWindow]);\n  const [state, setState] = React.useState(() => {\n    const initialMode = modeStorage?.get(defaultMode) || defaultMode;\n    const lightColorScheme = lightStorage?.get(defaultLightColorScheme) || defaultLightColorScheme;\n    const darkColorScheme = darkStorage?.get(defaultDarkColorScheme) || defaultDarkColorScheme;\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const [isClient, setIsClient] = React.useState(noSsr || !isMultiSchemes);\n  React.useEffect(() => {\n    setIsClient(true); // to rerender the component after hydration\n  }, []);\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = mode ?? defaultMode;\n      modeStorage?.set(newMode);\n      return {\n        ...currentState,\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      };\n    });\n  }, [modeStorage, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        lightStorage?.set(defaultLightColorScheme);\n        darkStorage?.set(defaultDarkColorScheme);\n        return {\n          ...currentState,\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        };\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = {\n            ...currentState\n          };\n          processState(currentState, mode => {\n            if (mode === 'light') {\n              lightStorage?.set(value);\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              darkStorage?.set(value);\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = {\n          ...currentState\n        };\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            lightStorage?.set(newLightColorScheme);\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            darkStorage?.set(newDarkColorScheme);\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, lightStorage, darkStorage, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(event => {\n    if (state.mode === 'system') {\n      setState(currentState => {\n        const systemMode = event?.matches ? 'dark' : 'light';\n\n        // Early exit, nothing changed.\n        if (currentState.systemMode === systemMode) {\n          return currentState;\n        }\n        return {\n          ...currentState,\n          systemMode\n        };\n      });\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    if (typeof window.matchMedia !== 'function' || !isMultiSchemes) {\n      return undefined;\n    }\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => {\n      media.removeListener(handler);\n    };\n  }, [isMultiSchemes]);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    if (isMultiSchemes) {\n      const unsubscribeMode = modeStorage?.subscribe(value => {\n        if (!value || ['light', 'dark', 'system'].includes(value)) {\n          setMode(value || defaultMode);\n        }\n      }) || noop;\n      const unsubscribeLight = lightStorage?.subscribe(value => {\n        if (!value || joinedColorSchemes.match(value)) {\n          setColorScheme({\n            light: value\n          });\n        }\n      }) || noop;\n      const unsubscribeDark = darkStorage?.subscribe(value => {\n        if (!value || joinedColorSchemes.match(value)) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }) || noop;\n      return () => {\n        unsubscribeMode();\n        unsubscribeLight();\n        unsubscribeDark();\n      };\n    }\n    return undefined;\n  }, [setColorScheme, setMode, joinedColorSchemes, defaultMode, storageWindow, isMultiSchemes, modeStorage, lightStorage, darkStorage]);\n  return {\n    ...state,\n    mode: isClient ? state.mode : undefined,\n    systemMode: isClient ? state.systemMode : undefined,\n    colorScheme: isClient ? colorScheme : undefined,\n    setMode,\n    setColorScheme\n  };\n}","import * as React from 'react';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-mui-color-scheme',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'mui-mode'\n};\nexport default (function InitColorSchemeScript(props) {\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, {\n    ...defaultConfig,\n    ...props\n  });\n});","'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\n * TODO: remove this export in v7\n * @deprecated\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\n *\n * You should use `ThemeProvider` and `createTheme()` instead:\n *\n * ```diff\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\n *\n * - const theme = extendTheme();\n * + const theme = createTheme({\n * +   cssVariables: true,\n * +   colorSchemes: { light: true, dark: true },\n * + });\n *\n * - <CssVarsProvider theme={theme}>\n * + <ThemeProvider theme={theme}>\n * ```\n *\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport ThemeProvider from \"../ThemeProvider/index.js\";\nimport InitColorSchemeScript, { DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport useCurrentColorScheme from \"./useCurrentColorScheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    defaultColorScheme,\n    resolveTheme\n  } = options;\n  const defaultContext = {\n    allColorSchemes: [],\n    colorScheme: undefined,\n    darkColorScheme: undefined,\n    lightColorScheme: undefined,\n    mode: undefined,\n    setColorScheme: () => {},\n    setMode: () => {},\n    systemMode: undefined\n  };\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  if (process.env.NODE_ENV !== 'production') {\n    ColorSchemeContext.displayName = 'ColorSchemeContext';\n  }\n  const useColorScheme = () => React.useContext(ColorSchemeContext) || defaultContext;\n  const defaultColorSchemes = {};\n  const defaultComponents = {};\n  function CssVarsProvider(props) {\n    const {\n      children,\n      theme: themeProp,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageManager,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false,\n      defaultMode: initialMode = 'system',\n      noSsr\n    } = props;\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const initialTheme = React.useMemo(() => {\n      if (themeProp) {\n        return themeProp;\n      }\n      return typeof defaultTheme === 'function' ? defaultTheme() : defaultTheme;\n    }, [themeProp]);\n    const scopedTheme = initialTheme[themeId];\n    const restThemeProp = scopedTheme || initialTheme;\n    const {\n      colorSchemes = defaultColorSchemes,\n      components = defaultComponents,\n      cssVarPrefix\n    } = restThemeProp;\n    const joinedColorSchemes = Object.keys(colorSchemes).filter(k => !!colorSchemes[k]).join(',');\n    const allColorSchemes = React.useMemo(() => joinedColorSchemes.split(','), [joinedColorSchemes]);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const defaultMode = colorSchemes[defaultLightColorScheme] && colorSchemes[defaultDarkColorScheme] ? initialMode : colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode || restThemeProp.palette?.mode;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageManager,\n      storageWindow,\n      noSsr\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const memoTheme = React.useMemo(() => {\n      // `colorScheme` is undefined on the server and hydration phase\n      const calculatedColorScheme = colorScheme || restThemeProp.defaultColorScheme;\n\n      // 2. get the `vars` object that refers to the CSS custom properties\n      const themeVars = restThemeProp.generateThemeVars?.() || restThemeProp.vars;\n\n      // 3. Start composing the theme object\n      const theme = {\n        ...restThemeProp,\n        components,\n        colorSchemes,\n        cssVarPrefix,\n        vars: themeVars\n      };\n      if (typeof theme.generateSpacing === 'function') {\n        theme.spacing = theme.generateSpacing();\n      }\n\n      // 4. Resolve the color scheme and merge it to the theme\n      if (calculatedColorScheme) {\n        const scheme = colorSchemes[calculatedColorScheme];\n        if (scheme && typeof scheme === 'object') {\n          // 4.1 Merge the selected color scheme to the theme\n          Object.keys(scheme).forEach(schemeKey => {\n            if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n              // shallow merge the 1st level structure of the theme.\n              theme[schemeKey] = {\n                ...theme[schemeKey],\n                ...scheme[schemeKey]\n              };\n            } else {\n              theme[schemeKey] = scheme[schemeKey];\n            }\n          });\n        }\n      }\n      return resolveTheme ? resolveTheme(theme) : theme;\n    }, [restThemeProp, colorScheme, components, colorSchemes, cssVarPrefix]);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    const colorSchemeSelector = restThemeProp.colorSchemeSelector;\n    useEnhancedEffect(() => {\n      if (colorScheme && colorSchemeNode && colorSchemeSelector && colorSchemeSelector !== 'media') {\n        const selector = colorSchemeSelector;\n        let rule = colorSchemeSelector;\n        if (selector === 'class') {\n          rule = `.%s`;\n        }\n        if (selector === 'data') {\n          rule = `[data-%s]`;\n        }\n        if (selector?.startsWith('data-') && !selector.includes('%s')) {\n          // 'data-mui-color-scheme' -> '[data-mui-color-scheme=\"%s\"]'\n          rule = `[${selector}=\"%s\"]`;\n        }\n        if (rule.startsWith('.')) {\n          colorSchemeNode.classList.remove(...allColorSchemes.map(scheme => rule.substring(1).replace('%s', scheme)));\n          colorSchemeNode.classList.add(rule.substring(1).replace('%s', colorScheme));\n        } else {\n          const matches = rule.replace('%s', colorScheme).match(/\\[([^\\]]+)\\]/);\n          if (matches) {\n            const [attr, value] = matches[1].split('=');\n            if (!value) {\n              // for attributes like `data-theme-dark`, `data-theme-light`\n              // remove all the existing data attributes before setting the new one\n              allColorSchemes.forEach(scheme => {\n                colorSchemeNode.removeAttribute(attr.replace(colorScheme, scheme));\n              });\n            }\n            colorSchemeNode.setAttribute(attr, value ? value.replace(/\"|'/g, '') : '');\n          } else {\n            colorSchemeNode.setAttribute(rule, colorScheme);\n          }\n        }\n      }\n    }, [colorScheme, colorSchemeSelector, colorSchemeNode, allColorSchemes]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      allColorSchemes,\n      colorScheme,\n      darkColorScheme,\n      lightColorScheme,\n      mode,\n      setColorScheme,\n      setMode: process.env.NODE_ENV === 'production' ? setMode : newMode => {\n        if (memoTheme.colorSchemeSelector === 'media') {\n          console.error(['MUI: The `setMode` function has no effect if `colorSchemeSelector` is `media` (`media` is the default value).', 'To toggle the mode manually, please configure `colorSchemeSelector` to use a class or data attribute.', 'To learn more, visit https://mui.com/material-ui/customization/css-theme-variables/configuration/#toggling-dark-mode-manually'].join('\\n'));\n        }\n        setMode(newMode);\n      },\n      systemMode\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode, memoTheme.colorSchemeSelector]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || restThemeProp.cssVariables === false || nested && upperTheme?.cssVarPrefix === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(ThemeProvider, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: memoTheme,\n        children: children\n      }), shouldGenerateStyleSheet && /*#__PURE__*/_jsx(GlobalStyles, {\n        styles: memoTheme.generateStyleSheets?.() || []\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The default mode when the storage is empty,\n     * require the theme to have `colorSchemes` with light and dark.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * If `true`, the mode will be the same value as the storage without an extra rerendering after the hydration.\n     * You should use this option in conjuction with `InitColorSchemeScript` component.\n     */\n    noSsr: PropTypes.bool,\n    /**\n     * The storage manager to be used for storing the mode and color scheme\n     * @default using `window.localStorage`\n     */\n    storageManager: PropTypes.func,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n  const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n  const getInitColorSchemeScript = params => InitColorSchemeScript({\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey,\n    ...params\n  });\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","'use client';\n\nimport * as React from 'react';\nimport ThemeProviderNoVars from \"./ThemeProviderNoVars.js\";\nimport { CssVarsProvider } from \"./ThemeProviderWithVars.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme,\n  ...props\n}) {\n  if (typeof theme === 'function') {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  const muiTheme = THEME_ID in theme ? theme[THEME_ID] : theme;\n  if (!('colorSchemes' in muiTheme)) {\n    return /*#__PURE__*/_jsx(ThemeProviderNoVars, {\n      theme: theme,\n      ...props\n    });\n  }\n  return /*#__PURE__*/_jsx(CssVarsProvider, {\n    theme: theme,\n    ...props\n  });\n}"],"names":["W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","_","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","i","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","identifier","postProcess","module","exports","RtlContext","useRtl","value","props","Provider","isDynamicSupport","html","theme","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","background","default","common","white","styles","colorSchemeStyles","colorSchemes","getColorSchemeSelector","Object","entries","forEach","scheme","selector","startsWith","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","SELECTOR","GlobalStyles","result","baseStyles","staticStyles","inProps","name","createTheme","main","secondary","paper","fontFamily","h1","fontSize","letterSpacing","marginBottom","h2","h3","h4","lineHeight","body2","MuiContainer","defaultProps","root","marginLeft","marginRight","paddingLeft","paddingRight","MuiCard","borderRadius","boxShadow","MuiDivider","useTheme","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","useThemeWithoutDefault","upperPrivateTheme","engineTheme","privateTheme","rtlValue","direction","RtlProvider","DefaultPropsProvider","ThemeProviderNoVars","themeInput","scopedTheme","undefined","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","noop","storageWindow","window","get","defaultValue","localStorage","getItem","set","setItem","subscribe","handler","listener","event","newValue","getSystemMode","matchMedia","matches","processState","state","callback","systemMode","useCurrentColorScheme","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageManager","noSsr","joinedColorSchemes","isMultiSchemes","modeStorage","lightStorage","darkStorage","setState","initialMode","lightColorScheme","darkColorScheme","isClient","setIsClient","getColorScheme","setMode","currentState","newMode","setColorScheme","includes","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","mediaListener","args","addListener","removeListener","unsubscribeMode","unsubscribeLight","match","unsubscribeDark","defaultConfig","attribute","CssVarsProvider","InternalCssVarsProvider","useColorScheme","getInitColorSchemeScript","deprecatedGetInitColorSchemeScript","defaultTheme","defaultModeStorageKey","defaultColorSchemeStorageKey","disableTransitionOnChange","designSystemTransitionOnChange","defaultColorScheme","resolveTheme","defaultContext","allColorSchemes","ColorSchemeContext","defaultColorSchemes","defaultComponents","themeProp","documentNode","document","colorSchemeNode","documentElement","disableNestedContext","disableStyleSheetGeneration","hasMounted","ctx","initialTheme","restThemeProp","cssVarPrefix","keys","split","stateMode","stateColorScheme","memoTheme","calculatedColorScheme","themeVars","generateThemeVars","generateSpacing","spacing","schemeKey","colorSchemeSelector","useEnhancedEffect","rule","classList","remove","substring","attr","setAttribute","timer","css","createElement","appendChild","createTextNode","head","getComputedStyle","removeChild","clearTimeout","contextValue","shouldGenerateStyleSheet","cssVariables","element","generateStyleSheets","params","initialAttribute","nonce","setter","InitColorSchemeScript","createCssVarsProvider","newTheme","createTypography","unstable_sx","styleFunctionSx","sx","this"],"sourceRoot":""}