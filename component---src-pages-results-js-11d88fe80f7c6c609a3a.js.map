{"version":3,"file":"component---src-pages-results-js-11d88fe80f7c6c609a3a.js","mappings":"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","sources":["webpack://wmtc/./src/utils/fixUsDateString.js","webpack://wmtc/./node_modules/@mui/icons-material/esm/KeyboardArrowDown.js","webpack://wmtc/./src/components/results-table.js","webpack://wmtc/./src/pages/results.js","webpack://wmtc/./node_modules/@mui/icons-material/esm/KeyboardArrowUp.js"],"sourcesContent":["// Utility to fix off-by-one date issue for MM/DD/YYYY strings\nexport function fixUsDateString(dateString) {\n  if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) {\n    const [month, day, year] = dateString.split('/');\n    const dateObj = new Date(Date.UTC(year, month - 1, Number(day) + 1));\n    if (!isNaN(dateObj)) {\n      return dateObj.toLocaleDateString('en-US', {\n        year: 'numeric', month: 'long', day: 'numeric'\n      });\n    }\n  }\n  return dateString;\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6z\"\n}), 'KeyboardArrowDown');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, useMediaQuery, Collapse, IconButton, Box } from '@mui/material';\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@mui/icons-material';\n\n// eslint-disable-next-line react/prop-types\nconst ResultsTable = ({ results }) => {\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const [openRows, setOpenRows] = React.useState({});\n\n  const handleExpandClick = idx => {\n    setOpenRows(prev => ({ ...prev, [idx]: !prev[idx] }));\n  };\n\n  if (isSmallScreen) {\n    return (\n      <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ccc', borderRadius: '8px' }}>\n        <Table size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n              <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n              <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n              <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {results.map((row, idx) => (\n              <React.Fragment key={idx}>\n                <TableRow hover>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.distance}</TableCell>\n                  <TableCell>{row.result}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      aria-label=\"expand row\"\n                      size=\"small\"\n                      onClick={() => handleExpandClick(idx)}\n                    >\n                      {openRows[idx] ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n                    <Collapse in={openRows[idx]} timeout=\"auto\" unmountOnExit>\n                      <Box margin={1}>\n                        <div><strong>Event:</strong> {row.event}</div>\n                        {row.place && <div><strong>Place:</strong> {row.place}</div>}\n                        <div><strong>Date:</strong> {row.date}</div>\n                      </Box>\n                    </Collapse>\n                  </TableCell>\n                </TableRow>\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ddd' }}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n            <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Event</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Place</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {results.map((row, idx) => (\n            <TableRow key={idx} hover>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.distance}</TableCell>\n              <TableCell>{row.result}</TableCell>\n              <TableCell>{row.event}</TableCell>\n              <TableCell>{row.place}</TableCell>\n              <TableCell>{row.date}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nResultsTable.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      distance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      result: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      event: PropTypes.string,\n      date: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default ResultsTable;\n","import * as React from 'react';\nimport NavBar from '../components/navbar';\nimport { CircularProgress, Box, Typography, List, ListItem, ListItemButton, ListItemText, Container, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport { fetchGoogleSheetCSV } from '../data/googleSheetFetcher';\nimport ResultsTable from '../components/results-table';\nimport { fixUsDateString } from '../utils/fixUsDateString';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from '../theme';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst spreadsheetId = '138hvDGLQMJmggHGqWQr_E29276fiE29VS0OQflFsgMk';\n\nconst ResultsPage = () => {\n  const [results, setResults] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [selectedYear, setSelectedYear] = React.useState(null);\n  const [mobileExpandedYear, setMobileExpandedYear] = React.useState(null);\n\n  React.useEffect(() => {\n    // Handle page reload quirks\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n    document.title = 'Results | WMTC';\n\n    const fetchResults = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchGoogleSheetCSV(spreadsheetId, 'Results');\n        setResults(data);\n      } catch (e) {\n        setError('Failed to load results. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, []);\n\n  // Filter out rows with empty First Name and Last Name\n  const validResults = results.filter(r =>\n    (r['First Name'] && r['First Name'].trim() !== '') ||\n    (r['Last Name'] && r['Last Name'].trim() !== '')\n  );\n\n  // Map to table row format\n  const mapResult = r => {\n    let formattedDate = r['Race Date'] || '';\n    formattedDate = fixUsDateString(formattedDate);\n    let result = r['Result (HH:MM:SS.MS)'] || '';\n    // Remove leading zeroes from each time component (except for the hour if it's a single digit)\n    if (result) {\n      const [main, ms] = result.split('.');\n      const parts = main.split(':');\n      // Remove leading zeroes from minutes and seconds\n      const mins = parts[1] ? parts[1].replace(/^0+(?!$)/, '') : '';\n      const secs = parts[2] ? parts[2].replace(/^0+(?!$)/, '') : '';\n      // If hour is 0 or missing, omit it\n      let formatted = '';\n      if (parts[0] && Number(parts[0]) > 0) {\n        formatted = String(Number(parts[0])) + ':' + mins + ':' + secs;\n      } else {\n        formatted = mins + ':' + secs;\n      }\n      result = formatted + (ms ? '.' + ms : '');\n    }\n    // Add Place column, empty string if 'N/A'\n    let place = r['Place (optional)'] && r['Place (optional)'].trim() !== 'N/A' ? r['Place (optional)'] : '';\n    return {\n      name: `${r['First Name'] || ''} ${r['Last Name'] || ''}`.trim(),\n      distance: r['Event Distance'] || '',\n      result,\n      event: r['Event Name'] || '',\n      place,\n      date: formattedDate\n    };\n  };\n\n  const tableRows = validResults.map(mapResult);\n\n  // Group by year\n  const resultsByYear = tableRows.reduce((acc, row) => {\n    const year = row.date ? (new Date(row.date).getFullYear()) : 'Unknown';\n    if (!acc[year]) acc[year] = [];\n    acc[year].push(row);\n    return acc;\n  }, {});\n\n  // Sort each year's results by date descending (most recent first)\n  Object.keys(resultsByYear).forEach(year => {\n    resultsByYear[year].sort((a, b) => {\n      // If either date is missing, keep original order\n      if (!a.date || !b.date) return 0;\n      return new Date(b.date) - new Date(a.date);\n    });\n  });\n\n  // Sort years descending, current year at the top\n  const years = Object.keys(resultsByYear)\n    .filter(y => y !== 'Unknown')\n    .map(Number)\n    .sort((a, b) => b - a);\n  if (resultsByYear['Unknown']) years.push('Unknown');\n\n  // Set default selected year to the current year if available\n  React.useEffect(() => {\n    if (years.length > 0 && !selectedYear) {\n      setSelectedYear(years[0]);\n    }\n  }, [years, selectedYear]);\n\n  const isMobile = typeof window !== 'undefined' && window.matchMedia('(max-width:600px)').matches;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ backgroundColor: 'background.default', minHeight: '100vh', width: '100vw' }}>\n        <NavBar />\n        <Container>\n          <Typography variant=\"h1\" gutterBottom align=\"center\" sx={{ mt: { xs: 4, md: 6 } }}>\n            Results\n          </Typography>\n          {/* Main content: sidebar and table, level with each other */}\n          <Box sx={{ maxWidth: '1400px', margin: '0 auto', display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'stretch', justifyContent: 'center', mt: 4 }}>\n            {/* Sidebar (desktop only) */}\n            {!isMobile && (\n              <Box sx={{ minWidth: 200, maxWidth: 220, mr: 4, display: 'flex', alignItems: 'stretch', height: '100%' }}>\n                <List sx={{ width: '100%', bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1, height: '100%' }}>\n                  {years.map(year => (\n                    <ListItem key={year} disablePadding>\n                      <ListItemButton\n                        selected={selectedYear === year}\n                        onClick={() => setSelectedYear(year)}\n                      >\n                        <ListItemText primary={year} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n            {/* Main table content */}\n            <Box sx={{ flexGrow: 1, minWidth: 0, display: 'flex', alignItems: 'flex-start', p: 0, width: '100%' }}>\n              {loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n                  <CircularProgress />\n                </Box>\n              ) : error ? (\n                <Box sx={{ p: 3, textAlign: 'center', color: 'error.main' }}>\n                  <Typography>{error}</Typography>\n                </Box>\n              ) : (\n                isMobile ? (\n                  <Box sx={{ width: '100%' }}>\n                    {years.map(year => (\n                      <Accordion key={year} sx={{ mb: 2 }} expanded={mobileExpandedYear === year} onChange={() => setMobileExpandedYear(mobileExpandedYear === year ? null : year)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                          <Typography variant=\"h6\">{year}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <ResultsTable results={resultsByYear[year]} />\n                        </AccordionDetails>\n                      </Accordion>\n                    ))}\n                  </Box>\n                ) : (\n                  selectedYear && <ResultsTable results={resultsByYear[selectedYear]} />\n                )\n              )}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default ResultsPage;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.41 15.41 12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n}), 'KeyboardArrowUp');"],"names":["fixUsDateString","dateString","test","month","day","year","split","dateObj","Date","UTC","Number","isNaN","toLocaleDateString","d","_ref","results","isSmallScreen","useMediaQuery","openRows","setOpenRows","React","TableContainer","component","Paper","style","maxHeight","margin","border","borderRadius","Table","size","stickyHeader","TableHead","TableRow","backgroundColor","TableCell","fontWeight","TableBody","map","row","idx","key","hover","name","distance","result","IconButton","onClick","prev","handleExpandClick","KeyboardArrowUp","KeyboardArrowDown","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","event","place","date","ResultsPage","setResults","loading","setLoading","error","setError","selectedYear","setSelectedYear","mobileExpandedYear","setMobileExpandedYear","document","body","padding","title","async","data","fetchGoogleSheetCSV","e","fetchResults","resultsByYear","filter","r","trim","formattedDate","main","ms","parts","mins","replace","secs","formatted","String","reduce","acc","getFullYear","push","Object","keys","forEach","sort","a","b","years","y","length","isMobile","window","matchMedia","matches","ThemeProvider","theme","CssBaseline","sx","minHeight","width","NavBar","Container","Typography","variant","gutterBottom","align","mt","xs","md","maxWidth","display","flexDirection","alignItems","justifyContent","minWidth","mr","height","List","bgcolor","boxShadow","ListItem","disablePadding","ListItemButton","selected","ListItemText","primary","flexGrow","p","CircularProgress","textAlign","color","Accordion","mb","expanded","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ResultsTable"],"sourceRoot":""}