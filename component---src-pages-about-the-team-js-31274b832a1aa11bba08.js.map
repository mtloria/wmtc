{"version":3,"file":"component---src-pages-about-the-team-js-31274b832a1aa11bba08.js","mappings":"mPAEO,SAASA,EAAqBC,GACnC,OAAO,EAAAC,EAAA,IAAqB,WAAYD,EAC1C,EACqB,EAAAE,EAAA,GAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,YAAa,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,aAAc,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,cAAe,gBACnc,I,UCSA,MAYMC,GAAY,EAAAC,EAAA,IAAO,MAAO,CAC9BC,KAAM,WACNL,KAAM,OACNM,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWE,UAAWF,EAAWG,QAAUJ,EAAOK,QAAgC,cAAvBJ,EAAWE,SAA2BH,EAAO,YAAYC,EAAWK,aAAa,GAP1J,EASf,EAAAC,EAAA,IAAU,EACXC,YACI,CACJC,iBAAkBD,EAAME,MAAQF,GAAOG,QAAQC,WAAWC,MAC1DC,OAAQN,EAAME,MAAQF,GAAOG,QAAQI,KAAKC,QAC1CC,WAAYT,EAAMU,YAAYC,OAAO,cACrCC,SAAU,CAAC,CACTrB,MAAO,EACLE,iBACKA,EAAWG,OAClBiB,MAAO,CACLC,aAAcd,EAAMe,MAAMD,eAE3B,CACDvB,MAAO,CACLI,QAAS,YAEXkB,MAAO,CACLG,OAAQ,cAAchB,EAAME,MAAQF,GAAOG,QAAQc,YAEpD,CACD1B,MAAO,CACLI,QAAS,aAEXkB,MAAO,CACLK,UAAW,sBACXC,gBAAiB,+BA2GvB,MAvG2B,cAAiB,SAAeC,EAASC,GAClE,MAAM9B,GAAQ,OAAgB,CAC5BA,MAAO6B,EACP/B,KAAM,aAEFW,GAAQ,EAAAsB,EAAA,MACR,UACJC,EAAS,UACTC,EAAY,MAAK,UACjB1B,EAAY,EAAC,OACbF,GAAS,EAAK,QACdD,EAAU,eACP8B,GACDlC,EACEE,EAAa,IACdF,EACHiC,YACA1B,YACAF,SACAD,WAEI+B,EAxEkBjC,KACxB,MAAM,OACJG,EAAM,UACNE,EAAS,QACTH,EAAO,QACP+B,GACEjC,EACEkC,EAAQ,CACZjC,KAAM,CAAC,OAAQC,GAAUC,GAAU,UAAuB,cAAZD,GAA2B,YAAYG,MAEvF,OAAO,EAAA8B,EAAA,GAAeD,EAAO5C,EAAsB2C,EAAQ,EA8D3CG,CAAkBpC,GAMlC,OAAoB,SAAKN,EAAW,CAClC2C,GAAIN,EACJ/B,WAAYA,EACZ8B,WAAW,EAAAQ,EAAA,GAAKL,EAAQhC,KAAM6B,GAC9BF,IAAKA,KACFI,EACHZ,MAAO,IACW,cAAZlB,GAA2B,CAC7B,kBAAmBK,EAAME,MAAQF,GAAOgC,QAAQlC,MAC5CE,EAAME,MAAQ,CAChB,kBAAmBF,EAAME,KAAK+B,WAAWnC,QAEtCE,EAAME,MAA+B,SAAvBF,EAAMG,QAAQ+B,MAAmB,CAClD,kBAAmB,oBAAmB,QAAM,QAAQ,EAAAC,EAAA,GAAgBrC,SAAgB,QAAM,QAAQ,EAAAqC,EAAA,GAAgBrC,YAGnH2B,EAAMZ,QAGf,G,gGC1Ge,SAASS,IACtB,MAAMtB,GAAQ,OAAe,KAM7B,OAAOA,EAAM,MAAaA,CAC5B,C","sources":["webpack://wmtc/./node_modules/@mui/material/Paper/paperClasses.js","webpack://wmtc/./node_modules/@mui/material/Paper/Paper.js","webpack://wmtc/./node_modules/@mui/material/styles/useTheme.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getPaperUtilityClass(slot) {\n  return generateUtilityClass('MuiPaper', slot);\n}\nconst paperClasses = generateUtilityClasses('MuiPaper', ['root', 'rounded', 'outlined', 'elevation', 'elevation0', 'elevation1', 'elevation2', 'elevation3', 'elevation4', 'elevation5', 'elevation6', 'elevation7', 'elevation8', 'elevation9', 'elevation10', 'elevation11', 'elevation12', 'elevation13', 'elevation14', 'elevation15', 'elevation16', 'elevation17', 'elevation18', 'elevation19', 'elevation20', 'elevation21', 'elevation22', 'elevation23', 'elevation24']);\nexport default paperClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport getOverlayAlpha from \"../styles/getOverlayAlpha.js\";\nimport { getPaperUtilityClass } from \"./paperClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    square,\n    elevation,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, !square && 'rounded', variant === 'elevation' && `elevation${elevation}`]\n  };\n  return composeClasses(slots, getPaperUtilityClass, classes);\n};\nconst PaperRoot = styled('div', {\n  name: 'MuiPaper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], !ownerState.square && styles.rounded, ownerState.variant === 'elevation' && styles[`elevation${ownerState.elevation}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  color: (theme.vars || theme).palette.text.primary,\n  transition: theme.transitions.create('box-shadow'),\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.square,\n    style: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'outlined'\n    },\n    style: {\n      border: `1px solid ${(theme.vars || theme).palette.divider}`\n    }\n  }, {\n    props: {\n      variant: 'elevation'\n    },\n    style: {\n      boxShadow: 'var(--Paper-shadow)',\n      backgroundImage: 'var(--Paper-overlay)'\n    }\n  }]\n})));\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiPaper'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    component = 'div',\n    elevation = 1,\n    square = false,\n    variant = 'elevation',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    elevation,\n    square,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n  return /*#__PURE__*/_jsx(PaperRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    style: {\n      ...(variant === 'elevation' && {\n        '--Paper-shadow': (theme.vars || theme).shadows[elevation],\n        ...(theme.vars && {\n          '--Paper-overlay': theme.vars.overlays?.[elevation]\n        }),\n        ...(!theme.vars && theme.palette.mode === 'dark' && {\n          '--Paper-overlay': `linear-gradient(${alpha('#fff', getOverlayAlpha(elevation))}, ${alpha('#fff', getOverlayAlpha(elevation))})`\n        })\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: chainPropTypes(integerPropType, props => {\n    const {\n      elevation,\n      variant\n    } = props;\n    if (elevation > 0 && variant === 'outlined') {\n      return new Error(`MUI: Combining \\`elevation={${elevation}}\\` with \\`variant=\"${variant}\"\\` has no effect. Either use \\`elevation={0}\\` or use a different \\`variant\\`.`);\n    }\n    return null;\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Paper;","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from \"./defaultTheme.js\";\nimport THEME_ID from \"./identifier.js\";\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}"],"names":["getPaperUtilityClass","slot","generateUtilityClass","generateUtilityClasses","PaperRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","square","rounded","elevation","memoTheme","theme","backgroundColor","vars","palette","background","paper","color","text","primary","transition","transitions","create","variants","style","borderRadius","shape","border","divider","boxShadow","backgroundImage","inProps","ref","useTheme","className","component","other","classes","slots","composeClasses","useUtilityClasses","as","clsx","shadows","overlays","mode","getOverlayAlpha"],"sourceRoot":""}