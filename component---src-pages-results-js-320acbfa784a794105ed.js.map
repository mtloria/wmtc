{"version":3,"file":"component---src-pages-results-js-320acbfa784a794105ed.js","mappings":"gGACO,SAASA,EAAgBC,GAC9B,GAAI,4BAA4BC,KAAKD,GAAa,CAChD,MAAOE,EAAOC,EAAKC,GAAQJ,EAAWK,MAAM,KACtCC,EAAU,IAAIC,KAAKA,KAAKC,IAAIJ,EAAMF,EAAQ,EAAGO,OAAON,GAAO,IACjE,IAAKO,MAAMJ,GACT,OAAOA,EAAQK,mBAAmB,QAAS,CACzCP,KAAM,UAAWF,MAAO,OAAQC,IAAK,WAG3C,CACA,OAAOH,CACT,C,2UCkIA,MAzIqBY,IAAkB,IAAjB,QAAEC,GAASD,EAC/B,MAAME,GAAgBC,EAAAA,EAAAA,GAAc,sBAC7BC,EAAUC,GAAeC,EAAAA,SAAe,CAAC,IACzCC,EAAaC,GAAkBF,EAAAA,UAAe,GAErDA,EAAAA,WAAgB,KACd,IAAKC,EAAa,OAClB,MAAME,EAAQC,YAAW,IAAMF,GAAe,IAAQ,MACtD,MAAO,IAAMG,aAAaF,EAAM,GAC/B,CAACF,IAGJD,EAAAA,WAAgB,KACdD,EAAY,CAAC,EAAE,GACd,CAACH,IAMJ,OAAIA,EAGAI,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,aAClBP,GACCD,EAAAA,cAACM,EAAAA,EAAG,CACFC,GAAI,CACFC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,OACRC,QAAS,yBACTC,OAAQ,GACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SAGjBlB,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEY,EAAG,EAAGC,aAAc,EAAGP,QAAS,mBAAoBQ,UAAW,EAAGC,UAAW,WACtFtB,EAAAA,cAAA,QAAMuB,MAAO,CAAEC,WAAY,IAAKC,SAAU,KAAM,qCAItDzB,EAAAA,cAAC0B,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAOL,MAAO,CAAEM,UAAW,OAAQC,OAAQ,EAAGC,OAAQ,iBAAkBX,aAAc,QAC/GpB,EAAAA,cAACgC,EAAAA,EAAK,CAACC,KAAK,QAAQC,cAAY,GAC9BlC,EAAAA,cAACmC,EAAAA,EAAS,KACRnC,EAAAA,cAACoC,EAAAA,EAAQ,CAACb,MAAO,CAAEc,gBAAiB,YAClCrC,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,QAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,YAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,UAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,QAGdtC,EAAAA,cAACuC,EAAAA,EAAS,KACP5C,EAAQ6C,KAAI,CAACC,EAAKC,IACjB1C,EAAAA,cAACA,EAAAA,SAAc,CAAC2C,IAAKD,GACnB1C,EAAAA,cAACoC,EAAAA,EAAQ,CACPQ,OAAK,EACLC,QAASA,IA5CDH,KACxB3C,GAAY+C,IAAI,IAAUA,EAAM,CAACJ,IAAOI,EAAKJ,MAAQ,EA2CtBK,CAAkBL,GACjCnC,GAAI,CACFyC,OAAQ,UACRC,WAAY,kBACZZ,gBAAiBvC,EAAS4C,GAAO,uBAAoBQ,EACrD,UAAW,CACTb,gBAAiBvC,EAAS4C,GAAO,kBAAoB,gBAEvDS,WAAY,SAGdnD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIW,MAChBpD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIY,UAChBrD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIa,QAChBtD,EAAAA,cAACsC,EAAAA,EAAS,OAEZtC,EAAAA,cAACoC,EAAAA,EAAQ,KACPpC,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEgC,cAAe,EAAGC,WAAY,GAAKC,QAAS,GAC9DzD,EAAAA,cAAC0D,EAAAA,EAAQ,CAACC,GAAI7D,EAAS4C,GAAMkB,QAAQ,OAAOC,eAAa,GACvD7D,EAAAA,cAACM,EAAAA,EAAG,CAACwB,OAAQ,GACX9B,EAAAA,cAAA,WAAKA,EAAAA,cAAA,cAAQ,UAAe,IAAEyC,EAAIqB,OACjCrB,EAAIsB,OAAS/D,EAAAA,cAAA,WAAKA,EAAAA,cAAA,cAAQ,UAAe,IAAEyC,EAAIsB,OAChD/D,EAAAA,cAAA,WAAKA,EAAAA,cAAA,cAAQ,SAAc,IAAEyC,EAAIuB,iBAevDhE,EAAAA,cAAC0B,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAOL,MAAO,CAAEM,UAAW,OAAQC,OAAQ,EAAGC,OAAQ,mBAC/E/B,EAAAA,cAACgC,EAAAA,EAAK,CAACE,cAAY,GACjBlC,EAAAA,cAACmC,EAAAA,EAAS,KACRnC,EAAAA,cAACoC,EAAAA,EAAQ,CAACb,MAAO,CAAEc,gBAAiB,YAClCrC,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,QAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,YAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,UAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,SAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,SAC1CxB,EAAAA,cAACsC,EAAAA,EAAS,CAACf,MAAO,CAAEC,WAAY,SAAU,UAG9CxB,EAAAA,cAACuC,EAAAA,EAAS,KACP5C,EAAQ6C,KAAI,CAACC,EAAKC,IACjB1C,EAAAA,cAACoC,EAAAA,EAAQ,CAACO,IAAKD,EAAKE,OAAK,GACvB5C,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIW,MAChBpD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIY,UAChBrD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIa,QAChBtD,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIqB,OAChB9D,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIsB,OAChB/D,EAAAA,cAACsC,EAAAA,EAAS,KAAEG,EAAIuB,WAKT,E,iDC6DrB,MA/KoBC,KAClB,MAAOtE,EAASuE,GAAclE,EAAAA,SAAe,KACtCmE,EAASC,GAAcpE,EAAAA,UAAe,IACtCqE,EAAOC,GAAYtE,EAAAA,SAAe,OAClCuE,EAAcC,GAAmBxE,EAAAA,SAAe,OAChDyE,EAAoBC,GAAyB1E,EAAAA,SAAe,OAC5D2E,EAAUC,GAAe5E,EAAAA,SACZ,oBAAX6E,QAAyBA,OAAOC,WAAW,qBAAqBC,SAGzE/E,EAAAA,WAAgB,KAEdgF,SAASC,KAAK1D,MAAMO,OAAS,IAC7BkD,SAASC,KAAK1D,MAAM2D,QAAU,IAC9BF,SAASG,MAAQ,iBAEIC,WACnBhB,GAAW,GACXE,EAAS,MACT,IACE,MAAMe,QAAaC,EAAAA,EAAAA,GAtBL,+CAsBwC,WACtDpB,EAAWmB,EACb,CAAE,MAAOE,GACPjB,EAAS,kDACX,CAAC,QACCF,GAAW,EACb,GAEFoB,EAAc,GACb,IAEHxF,EAAAA,WAAgB,KACd,MAAMyF,EAAQZ,OAAOC,WAAW,qBAC1BY,EAAeA,IAAMd,EAAYa,EAAMV,SAG7C,OAFAU,EAAME,iBAAiB,SAAUD,GACjCd,EAAYa,EAAMV,SACX,IAAMU,EAAMG,oBAAoB,SAAUF,EAAa,GAC7D,IAGH,MAyCMG,EAzCelG,EAAQmG,QAAOC,GACjCA,EAAE,eAA4C,KAA3BA,EAAE,cAAcC,QACnCD,EAAE,cAA0C,KAA1BA,EAAE,aAAaC,SAoCLxD,KAhCbuD,IAChB,IAAIE,EAAgBF,EAAE,cAAgB,GACtCE,GAAgBpH,EAAAA,EAAAA,GAAgBoH,GAChC,IAAI3C,EAASyC,EAAE,yBAA2B,GAE1C,GAAIzC,EAAQ,CACV,MAAO4C,EAAMC,GAAM7C,EAAOnE,MAAM,KAC1BiH,EAAQF,EAAK/G,MAAM,KAEnBkH,EAAOD,EAAM,GAAKA,EAAM,GAAGE,QAAQ,WAAY,IAAM,GACrDC,EAAOH,EAAM,GAAKA,EAAM,GAAGE,QAAQ,WAAY,IAAM,GAE3D,IAAIE,EAAY,GAEdA,EADEJ,EAAM,IAAM7G,OAAO6G,EAAM,IAAM,EACrBK,OAAOlH,OAAO6G,EAAM,KAAO,IAAMC,EAAO,IAAME,EAE9CF,EAAO,IAAME,EAE3BjD,EAASkD,GAAaL,EAAK,IAAMA,EAAK,GACxC,CAEA,IAAIpC,EAAQgC,EAAE,qBAAwD,QAAjCA,EAAE,oBAAoBC,OAAmBD,EAAE,oBAAsB,GACtG,MAAO,CACL3C,KAAM,GAAG2C,EAAE,eAAiB,MAAMA,EAAE,cAAgB,KAAKC,OACzD3C,SAAU0C,EAAE,mBAAqB,GACjCzC,SACAQ,MAAOiC,EAAE,eAAiB,GAC1BhC,QACAC,KAAMiC,EACP,IAM6BS,QAAO,CAACC,EAAKlE,KAC3C,MAAMvD,EAAOuD,EAAIuB,KAAQ,IAAI3E,KAAKoD,EAAIuB,MAAM4C,cAAiB,UAG7D,OAFKD,EAAIzH,KAAOyH,EAAIzH,GAAQ,IAC5ByH,EAAIzH,GAAM2H,KAAKpE,GACRkE,CAAG,GACT,CAAC,GAGJG,OAAOC,KAAKlB,GAAemB,SAAQ9H,IACjC2G,EAAc3G,GAAM+H,MAAK,CAACC,EAAGC,IAEtBD,EAAElD,MAASmD,EAAEnD,KACX,IAAI3E,KAAK8H,EAAEnD,MAAQ,IAAI3E,KAAK6H,EAAElD,MADN,GAE/B,IAIJ,MAAMoD,EAAQN,OAAOC,KAAKlB,GACvBC,QAAOuB,GAAW,YAANA,IACZ7E,IAAIjD,QACJ0H,MAAK,CAACC,EAAGC,IAAMA,EAAID,IAUtB,OATIrB,EAAuB,SAAGuB,EAAMP,KAAK,WAGzC7G,EAAAA,WAAgB,KACVoH,EAAME,OAAS,IAAM/C,GACvBC,EAAgB4C,EAAM,GACxB,GACC,CAACA,EAAO7C,IAGTvE,EAAAA,cAACuH,EAAAA,EAAa,CAACC,MAAOA,EAAAA,GACpBxH,EAAAA,cAACyH,EAAAA,GAAW,MACZzH,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAE8B,gBAAiB,qBAAsBqF,UAAW,QAAS/G,MAAO,UAC3EX,EAAAA,cAAC2H,EAAAA,EAAM,MACP3H,EAAAA,cAAC4H,EAAAA,EAAS,KACR5H,EAAAA,cAAC6H,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAACC,MAAM,SAASzH,GAAI,CAAE0H,GAAI,CAAEC,GAAI,EAAGC,GAAI,KAAO,WAInFnI,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAE6H,SAAU,SAAUtG,OAAQ,SAAUf,QAAS,OAAQsH,cAAe1D,EAAW,SAAW,MAAO3D,WAAY,UAAWC,eAAgB,SAAUgH,GAAI,KAE/JtD,GACA3E,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAE+H,SAAU,IAAKF,SAAU,IAAKG,GAAI,EAAGxH,QAAS,OAAQC,WAAY,UAAWJ,OAAQ,SAC9FZ,EAAAA,cAACwI,EAAAA,EAAI,CAACjI,GAAI,CAAEI,MAAO,OAAQE,QAAS,mBAAoBO,aAAc,EAAGC,UAAW,EAAGT,OAAQ,SAC5FwG,EAAM5E,KAAItD,GACTc,EAAAA,cAACyI,EAAAA,GAAQ,CAAC9F,IAAKzD,EAAMwJ,gBAAc,GACjC1I,EAAAA,cAAC2I,EAAAA,EAAc,CACbC,SAAUrE,IAAiBrF,EAC3B2D,QAASA,IAAM2B,EAAgBtF,IAE/Bc,EAAAA,cAAC6I,EAAAA,EAAY,CAACC,QAAS5J,UAQnCc,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEwI,SAAU,EAAGT,SAAU,EAAGvH,QAAS,OAAQC,WAAY,aAAcG,EAAG,EAAGR,MAAO,SAC1FwD,EACCnE,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEQ,QAAS,OAAQE,eAAgB,SAAUE,EAAG,IACvDnB,EAAAA,cAACgJ,EAAAA,EAAgB,OAEjB3E,EACFrE,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEY,EAAG,EAAGG,UAAW,SAAU2H,MAAO,eAC3CjJ,EAAAA,cAAC6H,EAAAA,EAAU,KAAExD,IAGfM,EACE3E,EAAAA,cAACM,EAAAA,EAAG,CAACC,GAAI,CAAEI,MAAO,SACfyG,EAAM5E,KAAItD,GACTc,EAAAA,cAACkJ,EAAAA,EAAS,CAACvG,IAAKzD,EAAMqB,GAAI,CAAE4I,GAAI,GAAKC,SAAU3E,IAAuBvF,EAAMmK,SAAUA,IAAM3E,EAAsBD,IAAuBvF,EAAO,KAAOA,IACrJc,EAAAA,cAACsJ,EAAAA,EAAgB,CAACC,WAAYvJ,EAAAA,cAACwJ,EAAAA,EAAc,OAC3CxJ,EAAAA,cAAC6H,EAAAA,EAAU,CAACC,QAAQ,MAAM5I,IAE5Bc,EAAAA,cAACyJ,EAAAA,EAAgB,KACfzJ,EAAAA,cAAC0J,EAAY,CAAC/J,QAASkG,EAAc3G,UAM7CqF,GAAgBvE,EAAAA,cAAC0J,EAAY,CAAC/J,QAASkG,EAActB,SAOnD,C","sources":["webpack://wmtc/./src/utils/fixUsDateString.js","webpack://wmtc/./src/components/results-table.js","webpack://wmtc/./src/pages/results.js"],"sourcesContent":["// Utility to fix off-by-one date issue for MM/DD/YYYY strings\nexport function fixUsDateString(dateString) {\n  if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) {\n    const [month, day, year] = dateString.split('/');\n    const dateObj = new Date(Date.UTC(year, month - 1, Number(day) + 1));\n    if (!isNaN(dateObj)) {\n      return dateObj.toLocaleDateString('en-US', {\n        year: 'numeric', month: 'long', day: 'numeric'\n      });\n    }\n  }\n  return dateString;\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, useMediaQuery, Collapse, Box } from '@mui/material';\n\n// eslint-disable-next-line react/prop-types\nconst ResultsTable = ({ results }) => {\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const [openRows, setOpenRows] = React.useState({});\n  const [showOverlay, setShowOverlay] = React.useState(true);\n\n  React.useEffect(() => {\n    if (!showOverlay) return;\n    const timer = setTimeout(() => setShowOverlay(false), 2500);\n    return () => clearTimeout(timer);\n  }, [showOverlay]);\n\n  // Reset openRows when switching between mobile/desktop\n  React.useEffect(() => {\n    setOpenRows({});\n  }, [isSmallScreen]);\n\n  const handleExpandClick = idx => {\n    setOpenRows(prev => ({ ...prev, [idx]: !prev[idx] }));\n  };\n\n  if (isSmallScreen) {\n    // Overlay message state\n    return (\n      <Box sx={{ position: 'relative' }}>\n        {showOverlay && (\n          <Box\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              bgcolor: 'rgba(255,255,255,0.92)',\n              zIndex: 10,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              pointerEvents: 'none',\n            }}\n          >\n            <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'background.paper', boxShadow: 2, textAlign: 'center' }}>\n              <span style={{ fontWeight: 600, fontSize: 18 }}>Tap any row to see more details</span>\n            </Box>\n          </Box>\n        )}\n        <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ccc', borderRadius: '8px' }}>\n          <Table size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n                <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n                <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n                <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {results.map((row, idx) => (\n                <React.Fragment key={idx}>\n                  <TableRow\n                    hover\n                    onClick={() => handleExpandClick(idx)}\n                    sx={{\n                      cursor: 'pointer',\n                      transition: 'background 0.2s',\n                      backgroundColor: openRows[idx] ? 'action.selected' : undefined,\n                      '&:hover': {\n                        backgroundColor: openRows[idx] ? 'action.selected' : 'action.hover',\n                      },\n                      userSelect: 'none',\n                    }}\n                  >\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.distance}</TableCell>\n                    <TableCell>{row.result}</TableCell>\n                    <TableCell />\n                  </TableRow>\n                  <TableRow>\n                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n                      <Collapse in={openRows[idx]} timeout=\"auto\" unmountOnExit>\n                        <Box margin={1}>\n                          <div><strong>Event:</strong> {row.event}</div>\n                          {row.place && <div><strong>Place:</strong> {row.place}</div>}\n                          <div><strong>Date:</strong> {row.date}</div>\n                        </Box>\n                      </Collapse>\n                    </TableCell>\n                  </TableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ddd' }}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n            <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Event</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Place</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {results.map((row, idx) => (\n            <TableRow key={idx} hover>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.distance}</TableCell>\n              <TableCell>{row.result}</TableCell>\n              <TableCell>{row.event}</TableCell>\n              <TableCell>{row.place}</TableCell>\n              <TableCell>{row.date}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nResultsTable.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      distance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      result: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      event: PropTypes.string,\n      date: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default ResultsTable;\n","import * as React from 'react';\nimport NavBar from '../components/navbar';\nimport { CircularProgress, Box, Typography, List, ListItem, ListItemButton, ListItemText, Container, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport { fetchGoogleSheetCSV } from '../data/googleSheetFetcher';\nimport ResultsTable from '../components/results-table';\nimport { fixUsDateString } from '../utils/fixUsDateString';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from '../theme';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst spreadsheetId = '138hvDGLQMJmggHGqWQr_E29276fiE29VS0OQflFsgMk';\n\nconst ResultsPage = () => {\n  const [results, setResults] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [selectedYear, setSelectedYear] = React.useState(null);\n  const [mobileExpandedYear, setMobileExpandedYear] = React.useState(null);\n  const [isMobile, setIsMobile] = React.useState(\n    typeof window !== 'undefined' ? window.matchMedia('(max-width:600px)').matches : false\n  );\n\n  React.useEffect(() => {\n    // Handle page reload quirks\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n    document.title = 'Results | WMTC';\n\n    const fetchResults = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchGoogleSheetCSV(spreadsheetId, 'Results');\n        setResults(data);\n      } catch (e) {\n        setError('Failed to load results. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, []);\n\n  React.useEffect(() => {\n    const media = window.matchMedia('(max-width:600px)');\n    const handleResize = () => setIsMobile(media.matches);\n    media.addEventListener('change', handleResize);\n    setIsMobile(media.matches);\n    return () => media.removeEventListener('change', handleResize);\n  }, []);\n\n  // Filter out rows with empty First Name and Last Name\n  const validResults = results.filter(r =>\n    (r['First Name'] && r['First Name'].trim() !== '') ||\n    (r['Last Name'] && r['Last Name'].trim() !== '')\n  );\n\n  // Map to table row format\n  const mapResult = r => {\n    let formattedDate = r['Race Date'] || '';\n    formattedDate = fixUsDateString(formattedDate);\n    let result = r['Result (HH:MM:SS.MS)'] || '';\n    // Remove leading zeroes from each time component (except for the hour if it's a single digit)\n    if (result) {\n      const [main, ms] = result.split('.');\n      const parts = main.split(':');\n      // Remove leading zeroes from minutes and seconds\n      const mins = parts[1] ? parts[1].replace(/^0+(?!$)/, '') : '';\n      const secs = parts[2] ? parts[2].replace(/^0+(?!$)/, '') : '';\n      // If hour is 0 or missing, omit it\n      let formatted = '';\n      if (parts[0] && Number(parts[0]) > 0) {\n        formatted = String(Number(parts[0])) + ':' + mins + ':' + secs;\n      } else {\n        formatted = mins + ':' + secs;\n      }\n      result = formatted + (ms ? '.' + ms : '');\n    }\n    // Add Place column, empty string if 'N/A'\n    let place = r['Place (optional)'] && r['Place (optional)'].trim() !== 'N/A' ? r['Place (optional)'] : '';\n    return {\n      name: `${r['First Name'] || ''} ${r['Last Name'] || ''}`.trim(),\n      distance: r['Event Distance'] || '',\n      result,\n      event: r['Event Name'] || '',\n      place,\n      date: formattedDate\n    };\n  };\n\n  const tableRows = validResults.map(mapResult);\n\n  // Group by year\n  const resultsByYear = tableRows.reduce((acc, row) => {\n    const year = row.date ? (new Date(row.date).getFullYear()) : 'Unknown';\n    if (!acc[year]) acc[year] = [];\n    acc[year].push(row);\n    return acc;\n  }, {});\n\n  // Sort each year's results by date descending (most recent first)\n  Object.keys(resultsByYear).forEach(year => {\n    resultsByYear[year].sort((a, b) => {\n      // If either date is missing, keep original order\n      if (!a.date || !b.date) return 0;\n      return new Date(b.date) - new Date(a.date);\n    });\n  });\n\n  // Sort years descending, current year at the top\n  const years = Object.keys(resultsByYear)\n    .filter(y => y !== 'Unknown')\n    .map(Number)\n    .sort((a, b) => b - a);\n  if (resultsByYear['Unknown']) years.push('Unknown');\n\n  // Set default selected year to the current year if available\n  React.useEffect(() => {\n    if (years.length > 0 && !selectedYear) {\n      setSelectedYear(years[0]);\n    }\n  }, [years, selectedYear]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ backgroundColor: 'background.default', minHeight: '100vh', width: '100vw' }}>\n        <NavBar />\n        <Container>\n          <Typography variant=\"h1\" gutterBottom align=\"center\" sx={{ mt: { xs: 4, md: 6 } }}>\n            Results\n          </Typography>\n          {/* Main content: sidebar and table, level with each other */}\n          <Box sx={{ maxWidth: '1400px', margin: '0 auto', display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'stretch', justifyContent: 'center', mt: 4 }}>\n            {/* Sidebar (desktop only) */}\n            {!isMobile && (\n              <Box sx={{ minWidth: 200, maxWidth: 220, mr: 4, display: 'flex', alignItems: 'stretch', height: '100%' }}>\n                <List sx={{ width: '100%', bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1, height: '100%' }}>\n                  {years.map(year => (\n                    <ListItem key={year} disablePadding>\n                      <ListItemButton\n                        selected={selectedYear === year}\n                        onClick={() => setSelectedYear(year)}\n                      >\n                        <ListItemText primary={year} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n            {/* Main table content */}\n            <Box sx={{ flexGrow: 1, minWidth: 0, display: 'flex', alignItems: 'flex-start', p: 0, width: '100%' }}>\n              {loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n                  <CircularProgress />\n                </Box>\n              ) : error ? (\n                <Box sx={{ p: 3, textAlign: 'center', color: 'error.main' }}>\n                  <Typography>{error}</Typography>\n                </Box>\n              ) : (\n                isMobile ? (\n                  <Box sx={{ width: '100%' }}>\n                    {years.map(year => (\n                      <Accordion key={year} sx={{ mb: 2 }} expanded={mobileExpandedYear === year} onChange={() => setMobileExpandedYear(mobileExpandedYear === year ? null : year)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                          <Typography variant=\"h6\">{year}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <ResultsTable results={resultsByYear[year]} />\n                        </AccordionDetails>\n                      </Accordion>\n                    ))}\n                  </Box>\n                ) : (\n                  selectedYear && <ResultsTable results={resultsByYear[selectedYear]} />\n                )\n              )}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default ResultsPage;\n"],"names":["fixUsDateString","dateString","test","month","day","year","split","dateObj","Date","UTC","Number","isNaN","toLocaleDateString","_ref","results","isSmallScreen","useMediaQuery","openRows","setOpenRows","React","showOverlay","setShowOverlay","timer","setTimeout","clearTimeout","Box","sx","position","top","left","width","height","bgcolor","zIndex","display","alignItems","justifyContent","pointerEvents","p","borderRadius","boxShadow","textAlign","style","fontWeight","fontSize","TableContainer","component","Paper","maxHeight","margin","border","Table","size","stickyHeader","TableHead","TableRow","backgroundColor","TableCell","TableBody","map","row","idx","key","hover","onClick","prev","handleExpandClick","cursor","transition","undefined","userSelect","name","distance","result","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","event","place","date","ResultsPage","setResults","loading","setLoading","error","setError","selectedYear","setSelectedYear","mobileExpandedYear","setMobileExpandedYear","isMobile","setIsMobile","window","matchMedia","matches","document","body","padding","title","async","data","fetchGoogleSheetCSV","e","fetchResults","media","handleResize","addEventListener","removeEventListener","resultsByYear","filter","r","trim","formattedDate","main","ms","parts","mins","replace","secs","formatted","String","reduce","acc","getFullYear","push","Object","keys","forEach","sort","a","b","years","y","length","ThemeProvider","theme","CssBaseline","minHeight","NavBar","Container","Typography","variant","gutterBottom","align","mt","xs","md","maxWidth","flexDirection","minWidth","mr","List","ListItem","disablePadding","ListItemButton","selected","ListItemText","primary","flexGrow","CircularProgress","color","Accordion","mb","expanded","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ResultsTable"],"sourceRoot":""}