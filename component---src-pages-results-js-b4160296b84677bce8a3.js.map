{"version":3,"file":"component---src-pages-results-js-b4160296b84677bce8a3.js","mappings":"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","sources":["webpack://wmtc/./src/utils/fixUsDateString.js","webpack://wmtc/./node_modules/@mui/material/ListItemText/listItemTextClasses.js","webpack://wmtc/./node_modules/@mui/material/ListItemText/ListItemText.js","webpack://wmtc/./src/components/results-table.js","webpack://wmtc/./node_modules/@mui/icons-material/esm/ExpandMore.js","webpack://wmtc/./src/pages/results.js"],"sourcesContent":["// Utility to fix off-by-one date issue for MM/DD/YYYY strings\nexport function fixUsDateString(dateString) {\n  if (/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) {\n    const [month, day, year] = dateString.split('/');\n    const dateObj = new Date(Date.UTC(year, month - 1, Number(day) + 1));\n    if (!isNaN(dateObj)) {\n      return dateObj.toLocaleDateString('en-US', {\n        year: 'numeric', month: 'long', day: 'numeric'\n      });\n    }\n  }\n  return dateString;\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport listItemTextClasses, { getListItemTextUtilityClass } from \"./listItemTextClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4,\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.primary})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.secondary})`]: {\n    display: 'block'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.primary && ownerState.secondary,\n    style: {\n      marginTop: 6,\n      marginBottom: 6\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.inset,\n    style: {\n      paddingLeft: 56\n    }\n  }]\n});\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = {\n    ...props,\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      primary: primaryTypographyProps,\n      secondary: secondaryTypographyProps,\n      ...slotProps\n    }\n  };\n  const [PrimarySlot, primarySlotProps] = useSlot('primary', {\n    className: classes.primary,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SecondarySlot, secondarySlotProps] = useSlot('secondary', {\n    className: classes.secondary,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(PrimarySlot, {\n      variant: dense ? 'body2' : 'body1',\n      component: primarySlotProps?.variant ? undefined : 'span',\n      ...primarySlotProps,\n      children: primary\n    });\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(SecondarySlot, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      ...secondarySlotProps,\n      children: secondary\n    });\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [primary, secondary]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.primary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.secondary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    primary: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    secondary: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    primary: PropTypes.elementType,\n    secondary: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, useMediaQuery, Collapse, Box } from '@mui/material';\n\nconst ResultsTable = ({ results }) => {\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const [openRows, setOpenRows] = React.useState({});\n  const [showOverlay, setShowOverlay] = React.useState(true);\n\n  React.useEffect(() => {\n    if (!showOverlay) return;\n    const timer = setTimeout(() => setShowOverlay(false), 2500);\n    return () => clearTimeout(timer);\n  }, [showOverlay]);\n\n  React.useEffect(() => {\n    setOpenRows({});\n  }, [isSmallScreen]);\n\n  const handleExpandClick = idx => {\n    setOpenRows(prev => ({ ...prev, [idx]: !prev[idx] }));\n  };\n\n  if (isSmallScreen) {\n    return (\n      <Box sx={{ position: 'relative' }}>\n        {showOverlay && (\n          <Box\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              bgcolor: 'rgba(255,255,255,0.92)',\n              zIndex: 10,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              pointerEvents: 'none',\n            }}\n          >\n            <Box sx={{ p: 3, borderRadius: 2, bgcolor: 'background.paper', boxShadow: 2, textAlign: 'center' }}>\n              <span style={{ fontWeight: 600, fontSize: 18 }}>Tap any row to see more details</span>\n            </Box>\n          </Box>\n        )}\n        <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ccc', borderRadius: '8px' }}>\n          <Table size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n                <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n                <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n                <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {results.map((row, idx) => (\n                <React.Fragment key={idx}>\n                  <TableRow\n                    hover\n                    onClick={() => handleExpandClick(idx)}\n                    sx={{\n                      cursor: 'pointer',\n                      transition: 'background 0.2s',\n                      backgroundColor: openRows[idx] ? 'action.selected' : undefined,\n                      '&:hover': {\n                        backgroundColor: openRows[idx] ? 'action.selected' : 'action.hover',\n                      },\n                      userSelect: 'none',\n                    }}\n                  >\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.distance}</TableCell>\n                    <TableCell>{row.result}</TableCell>\n                    <TableCell />\n                  </TableRow>\n                  <TableRow>\n                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n                      <Collapse in={openRows[idx]} timeout=\"auto\" unmountOnExit>\n                        <Box margin={1}>\n                          <div><strong>Event:</strong> {row.event}</div>\n                          {row.place && <div><strong>Place:</strong> {row.place}</div>}\n                          <div><strong>Date:</strong> {row.date}</div>\n                        </Box>\n                      </Collapse>\n                    </TableCell>\n                  </TableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} style={{ maxHeight: '70vh', margin: 0, border: '1px solid #ddd' }}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow style={{ backgroundColor: '#f5f5f5' }}>\n            <TableCell style={{ fontWeight: 'bold' }}>Name</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Distance</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Result</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Event</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Place</TableCell>\n            <TableCell style={{ fontWeight: 'bold' }}>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {results.map((row, idx) => (\n            <TableRow key={idx} hover>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.distance}</TableCell>\n              <TableCell>{row.result}</TableCell>\n              <TableCell>{row.event}</TableCell>\n              <TableCell>{row.place}</TableCell>\n              <TableCell>{row.date}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\nResultsTable.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      distance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      result: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      event: PropTypes.string,\n      date: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default ResultsTable;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import * as React from 'react';\nimport NavBar from '../components/navbar';\nimport { CircularProgress, Box, Typography, List, ListItem, ListItemButton, ListItemText, Container, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport { fetchGoogleSheetCSV } from '../data/googleSheetFetcher';\nimport ResultsTable from '../components/results-table';\nimport { fixUsDateString } from '../utils/fixUsDateString';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport theme from '../theme';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst spreadsheetId = '138hvDGLQMJmggHGqWQr_E29276fiE29VS0OQflFsgMk';\n\nconst ResultsPage = () => {\n  const [results, setResults] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  const [selectedYear, setSelectedYear] = React.useState(null);\n  const [mobileExpandedYear, setMobileExpandedYear] = React.useState(null);\n  const [isMobile, setIsMobile] = React.useState(\n    typeof window !== 'undefined' ? window.matchMedia('(max-width:600px)').matches : false\n  );\n\n  React.useEffect(() => {\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n    document.title = 'Results | WMTC';\n\n    const fetchResults = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchGoogleSheetCSV(spreadsheetId, 'Results');\n        setResults(data);\n      } catch (e) {\n        setError('Failed to load results. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchResults();\n  }, []);\n\n  React.useEffect(() => {\n    const media = window.matchMedia('(max-width:600px)');\n    const handleResize = () => setIsMobile(media.matches);\n    media.addEventListener('change', handleResize);\n    setIsMobile(media.matches);\n    return () => media.removeEventListener('change', handleResize);\n  }, []);\n\n  const validResults = results.filter(r =>\n    (r['First Name'] && r['First Name'].trim() !== '') ||\n    (r['Last Name'] && r['Last Name'].trim() !== '')\n  );\n\n  const mapResult = r => {\n    let formattedDate = r['Race Date'] || '';\n    formattedDate = fixUsDateString(formattedDate);\n    let result = r['Result (HH:MM:SS.MS)'] || '';\n    if (result) {\n      const [main, ms] = result.split('.');\n      const parts = main.split(':');\n      const mins = parts[1] ? parts[1].replace(/^0+(?!$)/, '') : '';\n      const secs = parts[2] ? parts[2].replace(/^0+(?!$)/, '') : '';\n      let formatted = '';\n      if (parts[0] && Number(parts[0]) > 0) {\n        formatted = String(Number(parts[0])) + ':' + mins + ':' + secs;\n      } else {\n        formatted = mins + ':' + secs;\n      }\n      result = formatted + (ms ? '.' + ms : '');\n    }\n    let place = r['Place (optional)'] && r['Place (optional)'].trim() !== 'N/A' ? r['Place (optional)'] : '';\n    return {\n      name: `${r['First Name'] || ''} ${r['Last Name'] || ''}`.trim(),\n      distance: r['Event Distance'] || '',\n      result,\n      event: r['Event Name'] || '',\n      place,\n      date: formattedDate\n    };\n  };\n\n  const tableRows = validResults.map(mapResult);\n\n  const resultsByYear = tableRows.reduce((acc, row) => {\n    const year = row.date ? (new Date(row.date).getFullYear()) : 'Unknown';\n    if (!acc[year]) acc[year] = [];\n    acc[year].push(row);\n    return acc;\n  }, {});\n\n  Object.keys(resultsByYear).forEach(year => {\n    resultsByYear[year].sort((a, b) => {\n      if (!a.date || !b.date) return 0;\n      return new Date(b.date) - new Date(a.date);\n    });\n  });\n\n  const years = Object.keys(resultsByYear)\n    .filter(y => y !== 'Unknown')\n    .map(Number)\n    .sort((a, b) => b - a);\n  if (resultsByYear['Unknown']) years.push('Unknown');\n\n  React.useEffect(() => {\n    if (years.length > 0 && !selectedYear) {\n      setSelectedYear(years[0]);\n    }\n  }, [years, selectedYear]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Box sx={{ backgroundColor: 'background.default', minHeight: '100vh', width: '100vw' }}>\n        <NavBar />\n        <Container>\n          <Typography variant=\"h1\" gutterBottom align=\"center\" sx={{ mt: { xs: 4, md: 6 } }}>\n            Results\n          </Typography>\n          <Box sx={{ maxWidth: '1400px', margin: '0 auto', display: 'flex', flexDirection: isMobile ? 'column' : 'row', alignItems: 'stretch', justifyContent: 'center', mt: 4 }}>\n            {!isMobile && (\n              <Box sx={{ minWidth: 200, maxWidth: 220, mr: 4, display: 'flex', alignItems: 'stretch', height: '100%' }}>\n                <List sx={{ width: '100%', bgcolor: 'background.paper', borderRadius: 2, boxShadow: 1, height: '100%' }}>\n                  {years.map(year => (\n                    <ListItem key={year} disablePadding>\n                      <ListItemButton\n                        selected={selectedYear === year}\n                        onClick={() => setSelectedYear(year)}\n                      >\n                        <ListItemText primary={year} />\n                      </ListItemButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n            <Box sx={{ flexGrow: 1, minWidth: 0, display: 'flex', alignItems: 'flex-start', p: 0, width: '100%' }}>\n              {loading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n                  <CircularProgress />\n                </Box>\n              ) : error ? (\n                <Box sx={{ p: 3, textAlign: 'center', color: 'error.main' }}>\n                  <Typography>{error}</Typography>\n                </Box>\n              ) : (\n                isMobile ? (\n                  <Box sx={{ width: '100%' }}>\n                    {years.map(year => (\n                      <Accordion key={year} sx={{ mb: 2 }} expanded={mobileExpandedYear === year} onChange={() => setMobileExpandedYear(mobileExpandedYear === year ? null : year)}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                          <Typography variant=\"h6\">{year}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <ResultsTable results={resultsByYear[year]} />\n                        </AccordionDetails>\n                      </Accordion>\n                    ))}\n                  </Box>\n                ) : (\n                  selectedYear && <ResultsTable results={resultsByYear[selectedYear]} />\n                )\n              )}\n            </Box>\n          </Box>\n        </Container>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default ResultsPage;\n"],"names":["fixUsDateString","dateString","test","month","day","year","split","dateObj","Date","UTC","Number","isNaN","toLocaleDateString","getListItemTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListItemTextRoot","styled","name","overridesResolver","props","styles","ownerState","primary","secondary","root","inset","multiline","dense","flex","minWidth","marginTop","marginBottom","typographyClasses","display","variants","style","paddingLeft","inProps","ref","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","slots","slotProps","other","ListContext","classes","composeClasses","useUtilityClasses","externalForwardedProps","PrimarySlot","primarySlotProps","useSlot","elementType","Typography","SecondarySlot","secondarySlotProps","type","variant","component","undefined","color","clsx","_ref","results","isSmallScreen","useMediaQuery","openRows","setOpenRows","React","showOverlay","setShowOverlay","timer","setTimeout","clearTimeout","Box","sx","position","top","left","width","height","bgcolor","zIndex","alignItems","justifyContent","pointerEvents","p","borderRadius","boxShadow","textAlign","fontWeight","fontSize","TableContainer","Paper","maxHeight","margin","border","Table","size","stickyHeader","TableHead","TableRow","backgroundColor","TableCell","TableBody","map","row","idx","key","hover","onClick","prev","handleExpandClick","cursor","transition","userSelect","distance","result","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","event","place","date","createSvgIcon","d","ResultsPage","setResults","loading","setLoading","error","setError","selectedYear","setSelectedYear","mobileExpandedYear","setMobileExpandedYear","isMobile","setIsMobile","window","matchMedia","matches","document","body","padding","title","async","data","fetchGoogleSheetCSV","e","fetchResults","media","handleResize","addEventListener","removeEventListener","resultsByYear","filter","r","trim","formattedDate","main","ms","parts","mins","replace","secs","formatted","String","reduce","acc","getFullYear","push","Object","keys","forEach","sort","a","b","years","y","length","ThemeProvider","theme","CssBaseline","minHeight","NavBar","Container","gutterBottom","align","mt","xs","md","maxWidth","flexDirection","mr","List","ListItem","disablePadding","ListItemButton","selected","ListItemText","flexGrow","CircularProgress","Accordion","mb","expanded","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ResultsTable"],"sourceRoot":""}