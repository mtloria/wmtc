{"version":3,"file":"2788fbdda2710b2dda8ed7f818efdb496d1b705b-7f6c18727c377f8334b4.js","mappings":"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","sources":["webpack://wmtc/./node_modules/@mui/material/Tab/tabClasses.js","webpack://wmtc/./node_modules/@mui/material/Tab/Tab.js","webpack://wmtc/./node_modules/@mui/material/internal/animate.js","webpack://wmtc/./node_modules/@mui/material/Tabs/ScrollbarSize.js","webpack://wmtc/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","webpack://wmtc/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","webpack://wmtc/./node_modules/@mui/material/TabScrollButton/tabScrollButtonClasses.js","webpack://wmtc/./node_modules/@mui/material/TabScrollButton/TabScrollButton.js","webpack://wmtc/./node_modules/@mui/material/Tabs/tabsClasses.js","webpack://wmtc/./node_modules/@mui/material/Tabs/Tabs.js","webpack://wmtc/./node_modules/@mui/material/utils/ownerDocument.js","webpack://wmtc/./node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTabUtilityClass(slot) {\n  return generateUtilityClass('MuiTab', slot);\n}\nconst tabClasses = generateUtilityClasses('MuiTab', ['root', 'labelIcon', 'textColorInherit', 'textColorPrimary', 'textColorSecondary', 'selected', 'disabled', 'fullWidth', 'wrapped', 'iconWrapper', 'icon']);\nexport default tabClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport unsupportedProp from \"../utils/unsupportedProp.js\";\nimport tabClasses, { getTabUtilityClass } from \"./tabClasses.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    textColor,\n    fullWidth,\n    wrapped,\n    icon,\n    label,\n    selected,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', icon && label && 'labelIcon', `textColor${capitalize(textColor)}`, fullWidth && 'fullWidth', wrapped && 'wrapped', selected && 'selected', disabled && 'disabled'],\n    icon: ['iconWrapper', 'icon']\n  };\n  return composeClasses(slots, getTabUtilityClass, classes);\n};\nconst TabRoot = styled(ButtonBase, {\n  name: 'MuiTab',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.label && ownerState.icon && styles.labelIcon, styles[`textColor${capitalize(ownerState.textColor)}`], ownerState.fullWidth && styles.fullWidth, ownerState.wrapped && styles.wrapped, {\n      [`& .${tabClasses.iconWrapper}`]: styles.iconWrapper\n    }, {\n      [`& .${tabClasses.icon}`]: styles.icon\n    }];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.button,\n  maxWidth: 360,\n  minWidth: 90,\n  position: 'relative',\n  minHeight: 48,\n  flexShrink: 0,\n  padding: '12px 16px',\n  overflow: 'hidden',\n  whiteSpace: 'normal',\n  textAlign: 'center',\n  lineHeight: 1.25,\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.label && (ownerState.iconPosition === 'top' || ownerState.iconPosition === 'bottom'),\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.label && ownerState.iconPosition !== 'top' && ownerState.iconPosition !== 'bottom',\n    style: {\n      flexDirection: 'row'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.icon && ownerState.label,\n    style: {\n      minHeight: 72,\n      paddingTop: 9,\n      paddingBottom: 9\n    }\n  }, {\n    props: ({\n      ownerState,\n      iconPosition\n    }) => ownerState.icon && ownerState.label && iconPosition === 'top',\n    style: {\n      [`& > .${tabClasses.icon}`]: {\n        marginBottom: 6\n      }\n    }\n  }, {\n    props: ({\n      ownerState,\n      iconPosition\n    }) => ownerState.icon && ownerState.label && iconPosition === 'bottom',\n    style: {\n      [`& > .${tabClasses.icon}`]: {\n        marginTop: 6\n      }\n    }\n  }, {\n    props: ({\n      ownerState,\n      iconPosition\n    }) => ownerState.icon && ownerState.label && iconPosition === 'start',\n    style: {\n      [`& > .${tabClasses.icon}`]: {\n        marginRight: theme.spacing(1)\n      }\n    }\n  }, {\n    props: ({\n      ownerState,\n      iconPosition\n    }) => ownerState.icon && ownerState.label && iconPosition === 'end',\n    style: {\n      [`& > .${tabClasses.icon}`]: {\n        marginLeft: theme.spacing(1)\n      }\n    }\n  }, {\n    props: {\n      textColor: 'inherit'\n    },\n    style: {\n      color: 'inherit',\n      opacity: 0.6,\n      // same opacity as theme.palette.text.secondary\n      [`&.${tabClasses.selected}`]: {\n        opacity: 1\n      },\n      [`&.${tabClasses.disabled}`]: {\n        opacity: (theme.vars || theme).palette.action.disabledOpacity\n      }\n    }\n  }, {\n    props: {\n      textColor: 'primary'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      [`&.${tabClasses.selected}`]: {\n        color: (theme.vars || theme).palette.primary.main\n      },\n      [`&.${tabClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      }\n    }\n  }, {\n    props: {\n      textColor: 'secondary'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      [`&.${tabClasses.selected}`]: {\n        color: (theme.vars || theme).palette.secondary.main\n      },\n      [`&.${tabClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.fullWidth,\n    style: {\n      flexShrink: 1,\n      flexGrow: 1,\n      flexBasis: 0,\n      maxWidth: 'none'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.wrapped,\n    style: {\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }]\n})));\nconst Tab = /*#__PURE__*/React.forwardRef(function Tab(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTab'\n  });\n  const {\n    className,\n    disabled = false,\n    disableFocusRipple = false,\n    // eslint-disable-next-line react/prop-types\n    fullWidth,\n    icon: iconProp,\n    iconPosition = 'top',\n    // eslint-disable-next-line react/prop-types\n    indicator,\n    label,\n    onChange,\n    onClick,\n    onFocus,\n    // eslint-disable-next-line react/prop-types\n    selected,\n    // eslint-disable-next-line react/prop-types\n    selectionFollowsFocus,\n    // eslint-disable-next-line react/prop-types\n    textColor = 'inherit',\n    value,\n    wrapped = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableFocusRipple,\n    selected,\n    icon: !!iconProp,\n    iconPosition,\n    label: !!label,\n    fullWidth,\n    textColor,\n    wrapped\n  };\n  const classes = useUtilityClasses(ownerState);\n  const icon = iconProp && label && /*#__PURE__*/React.isValidElement(iconProp) ? /*#__PURE__*/React.cloneElement(iconProp, {\n    className: clsx(classes.icon, iconProp.props.className)\n  }) : iconProp;\n  const handleClick = event => {\n    if (!selected && onChange) {\n      onChange(event, value);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected && onChange) {\n      onChange(event, value);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(TabRoot, {\n    focusRipple: !disableFocusRipple,\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: \"tab\",\n    \"aria-selected\": selected,\n    disabled: disabled,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    ownerState: ownerState,\n    tabIndex: selected ? 0 : -1,\n    ...other,\n    children: [iconPosition === 'top' || iconPosition === 'start' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [icon, label]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [label, icon]\n    }), indicator]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * The position of the icon relative to the label.\n   * @default 'top'\n   */\n  iconPosition: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any,\n  /**\n   * Tab labels appear in a single row.\n   * They can use a second line if needed.\n   * @default false\n   */\n  wrapped: PropTypes.bool\n} : void 0;\nexport default Tab;","function easeInOutSin(time) {\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;\n}\nexport default function animate(property, element, to, options = {}, cb = () => {}) {\n  const {\n    ease = easeInOutSin,\n    duration = 300 // standard\n  } = options;\n  let start = null;\n  const from = element[property];\n  let cancelled = false;\n  const cancel = () => {\n    cancelled = true;\n  };\n  const step = timestamp => {\n    if (cancelled) {\n      cb(new Error('Animation cancelled'));\n      return;\n    }\n    if (start === null) {\n      start = timestamp;\n    }\n    const time = Math.min(1, (timestamp - start) / duration);\n    element[property] = ease(time) * (to - from) + from;\n    if (time >= 1) {\n      requestAnimationFrame(() => {\n        cb(null);\n      });\n      return;\n    }\n    requestAnimationFrame(step);\n  };\n  if (from === to) {\n    cb(new Error('Element already at target position'));\n    return cancel;\n  }\n  requestAnimationFrame(step);\n  return cancel;\n}","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from \"../utils/debounce.js\";\nimport { ownerWindow, unstable_useEnhancedEffect as useEnhancedEffect } from \"../utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n\n/**\n * @ignore - internal component.\n * The component originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\nexport default function ScrollbarSize(props) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  const scrollbarHeight = React.useRef();\n  const nodeRef = React.useRef(null);\n  const setMeasurements = () => {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n  useEnhancedEffect(() => {\n    const handleResize = debounce(() => {\n      const prevHeight = scrollbarHeight.current;\n      setMeasurements();\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    const containerWindow = ownerWindow(nodeRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(() => {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: styles,\n    ...other,\n    ref: nodeRef\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTabScrollButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiTabScrollButton', slot);\n}\nconst tabScrollButtonClasses = generateUtilityClasses('MuiTabScrollButton', ['root', 'vertical', 'horizontal', 'disabled']);\nexport default tabScrollButtonClasses;","'use client';\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from \"./tabScrollButtonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  },\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      width: '100%',\n      height: 40,\n      '& svg': {\n        transform: 'var(--TabScrollButton-svgRotate)'\n      }\n    }\n  }]\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n    className,\n    slots = {},\n    slotProps = {},\n    direction,\n    orientation,\n    disabled,\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    isRtl,\n    ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const StartButtonIcon = slots.StartScrollButtonIcon ?? KeyboardArrowLeft;\n  const EndButtonIcon = slots.EndScrollButtonIcon ?? KeyboardArrowRight;\n  const startButtonIconProps = useSlotProps({\n    elementType: StartButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  const endButtonIconProps = useSlotProps({\n    elementType: EndButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    additionalProps: {\n      fontSize: 'small'\n    },\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, {\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null,\n    ...other,\n    style: {\n      ...other.style,\n      ...(orientation === 'vertical' && {\n        '--TabScrollButton-svgRotate': `rotate(${isRtl ? -90 : 90}deg)`\n      })\n    },\n    children: direction === 'left' ? /*#__PURE__*/_jsx(StartButtonIcon, {\n      ...startButtonIconProps\n    }) : /*#__PURE__*/_jsx(EndButtonIcon, {\n      ...endButtonIconProps\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    EndScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTabsUtilityClass(slot) {\n  return generateUtilityClass('MuiTabs', slot);\n}\nconst tabsClasses = generateUtilityClasses('MuiTabs', ['root', 'vertical', 'list', 'flexContainer', 'flexContainerVertical', 'centered', 'scroller', 'fixed', 'scrollableX', 'scrollableY', 'hideScrollbar', 'scrollButtons', 'scrollButtonsHideMobile', 'indicator']);\nexport default tabsClasses;","'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport debounce from \"../utils/debounce.js\";\nimport animate from \"../internal/animate.js\";\nimport ScrollbarSize from \"./ScrollbarSize.js\";\nimport TabScrollButton from \"../TabScrollButton/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport tabsClasses, { getTabsUtilityClass } from \"./tabsClasses.js\";\nimport ownerDocument from \"../utils/ownerDocument.js\";\nimport ownerWindow from \"../utils/ownerWindow.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return list.firstChild;\n};\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return list.lastChild;\n};\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    list: ['list', 'flexContainer', vertical && 'flexContainerVertical', vertical && 'vertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  minHeight: 48,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollButtonsHideMobile,\n    style: {\n      [`& .${tabsClasses.scrollButtons}`]: {\n        [theme.breakpoints.down('sm')]: {\n          display: 'none'\n        }\n      }\n    }\n  }]\n})));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.fixed,\n    style: {\n      overflowX: 'hidden',\n      width: '100%'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.hideScrollbar,\n    style: {\n      // Hide dimensionless scrollbar on macOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableX,\n    style: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.scrollableY,\n    style: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    }\n  }]\n});\nconst List = styled('div', {\n  name: 'MuiTabs',\n  slot: 'List',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.list, styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})({\n  display: 'flex',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.centered,\n    style: {\n      justifyContent: 'center'\n    }\n  }]\n});\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create(),\n  variants: [{\n    props: {\n      indicatorColor: 'primary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.primary.main\n    }\n  }, {\n    props: {\n      indicatorColor: 'secondary'\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette.secondary.main\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.vertical,\n    style: {\n      height: '100%',\n      width: 2,\n      right: 0\n    }\n  }]\n})));\nconst TabsScrollbarSize = styled(ScrollbarSize)({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n});\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    className,\n    component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'primary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent,\n    // TODO: remove in v7 (deprecated in v6)\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    slots = {},\n    slotProps = {},\n    TabIndicatorProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    TabScrollButtonProps = {},\n    // TODO: remove in v7 (deprecated in v6)\n    textColor = 'primary',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false,\n    ...other\n  } = props;\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = {\n    ...props,\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  };\n  const classes = useUtilityClasses(ownerState);\n  const startScrollButtonIconProps = useSlotProps({\n    elementType: slots.StartScrollButtonIcon,\n    externalSlotProps: slotProps.startScrollButtonIcon,\n    ownerState\n  });\n  const endScrollButtonIconProps = useSlotProps({\n    elementType: slots.EndScrollButtonIcon,\n    externalSlotProps: slotProps.endScrollButtonIcon,\n    ownerState\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayStartScroll, setDisplayStartScroll] = React.useState(false);\n  const [displayEndScroll, setDisplayEndScroll] = React.useState(false);\n  const [updateScrollObserver, setUpdateScrollObserver] = React.useState(false);\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      indicator: TabIndicatorProps,\n      scrollButton: TabScrollButtonProps,\n      ...slotProps\n    }\n  };\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect();\n      // create a new object with ClientRect class props + scrollLeft\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n    let tabMeta;\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 &&\n          // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n    if (vertical) {\n      startIndicator = 'top';\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n      if (tabMeta && tabsMeta) {\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + tabsMeta.scrollLeft);\n      }\n    }\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n    if (typeof indicatorStyle[startIndicator] !== 'number' || typeof indicatorStyle[size] !== 'number') {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n    }\n    scroll(scrollValue);\n  };\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n        break;\n      }\n      totalSize += tab[clientSize];\n    }\n    return totalSize;\n  };\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n  const [ScrollbarSlot, {\n    onChange: scrollbarOnChange,\n    ...scrollbarSlotProps\n  }] = useSlot('scrollbar', {\n    className: clsx(classes.scrollableX, classes.hideScrollbar),\n    elementType: TabsScrollbarSize,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    ownerState\n  });\n\n  // TODO Remove <ScrollbarSize /> as browser support for hiding the scrollbar\n  // with CSS improves.\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    scrollbarOnChange?.(scrollbarWidth);\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, [scrollbarOnChange]);\n  const [ScrollButtonsSlot, scrollButtonSlotProps] = useSlot('scrollButtons', {\n    className: clsx(classes.scrollButtons, TabScrollButtonProps.className),\n    elementType: TabScrollButton,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      orientation,\n      slots: {\n        StartScrollButtonIcon: slots.startScrollButtonIcon || slots.StartScrollButtonIcon,\n        EndScrollButtonIcon: slots.endScrollButtonIcon || slots.EndScrollButtonIcon\n      },\n      slotProps: {\n        startScrollButtonIcon: startScrollButtonIconProps,\n        endScrollButtonIcon: endScrollButtonIconProps\n      }\n    }\n  });\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSlot, {\n      ...scrollbarSlotProps,\n      onChange: handleScrollbarSizeChange\n    }) : null;\n    const scrollButtonsActive = displayStartScroll || displayEndScroll;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayStartScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonsSlot, {\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayEndScroll,\n      ...scrollButtonSlotProps\n    }) : null;\n    return conditionalElements;\n  };\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      setUpdateScrollObserver(!updateScrollObserver);\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n      }\n    });\n    let resizeObserver;\n\n    /**\n     * @type {MutationCallback}\n     */\n    const handleMutation = records => {\n      records.forEach(record => {\n        record.removedNodes.forEach(item => {\n          resizeObserver?.unobserve(item);\n        });\n        record.addedNodes.forEach(item => {\n          resizeObserver?.observe(item);\n        });\n      });\n      handleResize();\n      updateScrollButtonState();\n    };\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let mutationObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n    if (typeof MutationObserver !== 'undefined') {\n      mutationObserver = new MutationObserver(handleMutation);\n      mutationObserver.observe(tabListRef.current, {\n        childList: true\n      });\n    }\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      mutationObserver?.disconnect();\n      resizeObserver?.disconnect();\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  /**\n   * Toggle visibility of start and end scroll buttons\n   * Using IntersectionObserver on first and last Tabs.\n   */\n  React.useEffect(() => {\n    const tabListChildren = Array.from(tabListRef.current.children);\n    const length = tabListChildren.length;\n    if (typeof IntersectionObserver !== 'undefined' && length > 0 && scrollable && scrollButtons !== false) {\n      const firstTab = tabListChildren[0];\n      const lastTab = tabListChildren[length - 1];\n      const observerOptions = {\n        root: tabsRef.current,\n        threshold: 0.99\n      };\n      const handleScrollButtonStart = entries => {\n        setDisplayStartScroll(!entries[0].isIntersecting);\n      };\n      const firstObserver = new IntersectionObserver(handleScrollButtonStart, observerOptions);\n      firstObserver.observe(firstTab);\n      const handleScrollButtonEnd = entries => {\n        setDisplayEndScroll(!entries[0].isIntersecting);\n      };\n      const lastObserver = new IntersectionObserver(handleScrollButtonEnd, observerOptions);\n      lastObserver.observe(lastTab);\n      return () => {\n        firstObserver.disconnect();\n        lastObserver.disconnect();\n      };\n    }\n    return undefined;\n  }, [scrollable, scrollButtons, updateScrollObserver, childrenProp?.length]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const [IndicatorSlot, indicatorSlotProps] = useSlot('indicator', {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    elementType: TabsIndicator,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: indicatorStyle\n    }\n  });\n  const indicator = /*#__PURE__*/_jsx(IndicatorSlot, {\n    ...indicatorSlotProps\n  });\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, {\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue,\n      ...(childIndex === 1 && value === false && !child.props.tabIndex ? {\n        tabIndex: 0\n      } : {})\n    });\n  });\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement;\n    // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n    const role = currentFocus.getAttribute('role');\n    if (role !== 'tab') {\n      return;\n    }\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n      default:\n        break;\n    }\n  };\n  const conditionalElements = getConditionalElements();\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: TabsRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [ScrollerSlot, scrollerSlotProps] = useSlot('scroller', {\n    ref: tabsRef,\n    className: classes.scroller,\n    elementType: TabsScroller,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      }\n    }\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    ref: tabListRef,\n    className: clsx(classes.list, classes.flexContainer),\n    elementType: List,\n    externalForwardedProps,\n    ownerState,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onKeyDown: event => {\n        handleKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    })\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(ScrollerSlot, {\n      ...scrollerSlotProps,\n      children: [/*#__PURE__*/_jsx(ListSlot, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        role: \"tablist\",\n        ...listSlotProps,\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The component used to render the scroll buttons.\n   * @deprecated use the `slots.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['auto', false, true]),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    indicator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scrollButtons: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    scroller: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startScrollButtonIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    endScrollButtonIcon: PropTypes.elementType,\n    EndScrollButtonIcon: PropTypes.elementType,\n    indicator: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType,\n    scrollbar: PropTypes.elementType,\n    scrollButtons: PropTypes.elementType,\n    scroller: PropTypes.elementType,\n    startScrollButtonIcon: PropTypes.elementType,\n    StartScrollButtonIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Props applied to the tab indicator element.\n   * @deprecated use the `slotProps.indicator` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n  /**\n   * Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.\n   * @deprecated use the `slotProps.scrollButtons` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  - `fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","import ownerDocument from '@mui/utils/ownerDocument';\nexport default ownerDocument;","'use client';\n\nimport useForkRef from \"../useForkRef/index.js\";\nimport appendOwnerState from \"../appendOwnerState/index.js\";\nimport mergeSlotProps from \"../mergeSlotProps/index.js\";\nimport resolveComponentProps from \"../resolveComponentProps/index.js\";\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...other\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...other,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}\nexport default useSlotProps;"],"names":["getTabUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TabRoot","styled","ButtonBase","name","overridesResolver","props","styles","ownerState","root","label","icon","labelIcon","capitalize","textColor","fullWidth","wrapped","iconWrapper","memoTheme","theme","typography","button","maxWidth","minWidth","position","minHeight","flexShrink","padding","overflow","whiteSpace","textAlign","lineHeight","variants","iconPosition","style","flexDirection","paddingTop","paddingBottom","marginBottom","marginTop","marginRight","spacing","marginLeft","color","opacity","selected","disabled","vars","palette","action","disabledOpacity","text","secondary","primary","main","flexGrow","flexBasis","fontSize","pxToRem","inProps","ref","className","disableFocusRipple","iconProp","indicator","onChange","onClick","onFocus","selectionFollowsFocus","value","other","classes","slots","composeClasses","useUtilityClasses","clsx","focusRipple","role","event","tabIndex","children","easeInOutSin","time","Math","sin","PI","width","height","top","createSvgIcon","d","getTabScrollButtonUtilityClass","TabScrollButtonRoot","orientation","transform","slotProps","direction","isRtl","StartButtonIcon","StartScrollButtonIcon","KeyboardArrowLeft","EndButtonIcon","EndScrollButtonIcon","KeyboardArrowRight","startButtonIconProps","useSlotProps","elementType","externalSlotProps","startScrollButtonIcon","additionalProps","endButtonIconProps","endScrollButtonIcon","component","getTabsUtilityClass","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","focus","TabsRoot","scrollButtons","scrollButtonsHideMobile","vertical","WebkitOverflowScrolling","display","breakpoints","down","TabsScroller","scroller","fixed","hideScrollbar","scrollableX","scrollableY","flex","overflowX","scrollbarWidth","overflowY","List","flexContainer","flexContainerVertical","centered","justifyContent","TabsIndicator","bottom","transition","transitions","create","indicatorColor","backgroundColor","right","TabsScrollbarSize","scrollbarHeight","nodeRef","setMeasurements","current","offsetHeight","clientHeight","useEnhancedEffect","handleResize","debounce","prevHeight","containerWindow","ownerWindow","addEventListener","clear","removeEventListener","defaultIndicatorStyle","useTheme","ariaLabel","ariaLabelledBy","childrenProp","allowScrollButtonsMobile","ScrollButtonComponent","TabIndicatorProps","TabScrollButtonProps","variant","visibleScrollbar","scrollable","scrollStart","start","end","clientSize","size","startScrollButtonIconProps","endScrollButtonIconProps","mounted","setMounted","indicatorStyle","setIndicatorStyle","displayStartScroll","setDisplayStartScroll","displayEndScroll","setDisplayEndScroll","updateScrollObserver","setUpdateScrollObserver","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","tabListRef","externalForwardedProps","scrollButton","getTabsMeta","tabsNode","tabsMeta","tabMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollWidth","left","length","tab","get","updateIndicatorState","useEventCallback","startIndicator","startValue","newIndicatorStyle","dStart","abs","dSize","scroll","scrollValue","animation","property","element","to","options","cb","ease","duration","from","cancelled","cancel","step","timestamp","Error","min","requestAnimationFrame","animate","standard","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","Array","i","handleStartScrollClick","handleEndScrollClick","ScrollbarSlot","scrollbarOnChange","scrollbarSlotProps","useSlot","shouldForwardComponentProp","handleScrollbarSizeChange","ScrollButtonsSlot","scrollButtonSlotProps","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","resizeObserver","handleMutation","records","forEach","record","removedNodes","unobserve","addedNodes","observe","win","mutationObserver","ResizeObserver","child","MutationObserver","childList","disconnect","tabListChildren","IntersectionObserver","firstTab","lastTab","observerOptions","threshold","firstObserver","entries","isIntersecting","lastObserver","updateIndicator","updateScrollButtons","IndicatorSlot","indicatorSlotProps","childIndex","map","childValue","undefined","set","conditionalElements","scrollbarSizeListener","showScrollButtons","scrollButtonStart","scrollButtonEnd","getConditionalElements","RootSlot","rootSlotProps","ScrollerSlot","scrollerSlotProps","ListSlot","listSlotProps","getSlotProps","handlers","onKeyDown","ownerDocument","activeElement","previousItemKey","nextItemKey","key","preventDefault","handleKeyDown","parameters","skipResolvingSlotProps","resolvedComponentsProps","mergedProps","internalRef"],"sourceRoot":""}